{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "reportDelaySec",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "payload",
          "type": "uint256"
        }
      ],
      "name": "pushReport",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getData",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "addProvider",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "providers",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "removeProvider",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumProviders",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "purgeReports",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "reportDelaySec_",
          "type": "uint256"
        }
      ],
      "name": "setReportDelaySec",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "providersSize",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reportExpirationTimeSec",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "minimumProviders_",
          "type": "uint256"
        }
      ],
      "name": "setMinimumProviders",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "providerReports",
      "outputs": [
        {
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "name": "payload",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "reportExpirationTimeSec_",
          "type": "uint256"
        }
      ],
      "name": "setReportExpirationTimeSec",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "reportExpirationTimeSec_",
          "type": "uint256"
        },
        {
          "name": "reportDelaySec_",
          "type": "uint256"
        },
        {
          "name": "minimumProviders_",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "ProviderAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "ProviderRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "ReportTimestampOutOfRange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "payload",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "ProviderReportPushed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "allSourcePaths": {
    "13": "deps/openzeppelin-solidity/2.0.0/contracts/math/SafeMath.sol",
    "14": "deps/openzeppelin-solidity/2.0.0/contracts/ownership/Ownable.sol",
    "7": "contracts/digg-oracles/MedianOracle.sol",
    "8": "contracts/digg-oracles/lib/Select.sol"
  },
  "ast": {
    "absolutePath": "contracts/digg-oracles/MedianOracle.sol",
    "exportedSymbols": {
      "IOracle": [
        804
      ],
      "MedianOracle": [
        1359
      ]
    },
    "id": 1360,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 793,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:7"
      },
      {
        "absolutePath": "deps/openzeppelin-solidity/2.0.0/contracts/math/SafeMath.sol",
        "file": "deps/openzeppelin-solidity/2.0.0/contracts/math/SafeMath.sol",
        "id": 794,
        "nodeType": "ImportDirective",
        "scope": 1360,
        "sourceUnit": 2742,
        "src": "25:70:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "deps/openzeppelin-solidity/2.0.0/contracts/ownership/Ownable.sol",
        "file": "deps/openzeppelin-solidity/2.0.0/contracts/ownership/Ownable.sol",
        "id": 795,
        "nodeType": "ImportDirective",
        "scope": 1360,
        "sourceUnit": 2851,
        "src": "96:74:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/digg-oracles/lib/Select.sol",
        "file": "./lib/Select.sol",
        "id": 796,
        "nodeType": "ImportDirective",
        "scope": 1360,
        "sourceUnit": 2614,
        "src": "172:26:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 804,
        "linearizedBaseContracts": [
          804
        ],
        "name": "IOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 803,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "241:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 799,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "262:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 801,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 803,
                  "src": "271:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 800,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "261:15:7"
            },
            "scope": 804,
            "src": "225:52:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1360,
        "src": "201:78:7"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 805,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2850,
              "src": "444:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2850",
                "typeString": "contract Ownable"
              }
            },
            "id": 806,
            "nodeType": "InheritanceSpecifier",
            "src": "444:7:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 807,
              "name": "IOracle",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 804,
              "src": "453:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IOracle_$804",
                "typeString": "contract IOracle"
              }
            },
            "id": 808,
            "nodeType": "InheritanceSpecifier",
            "src": "453:7:7"
          }
        ],
        "contractDependencies": [
          804,
          2850
        ],
        "contractKind": "contract",
        "documentation": "@title Median Oracle\n * @notice Provides a value onchain that's aggregated from a whitelisted set of\n        providers.",
        "fullyImplemented": true,
        "id": 1359,
        "linearizedBaseContracts": [
          1359,
          804,
          2850
        ],
        "name": "MedianOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 811,
            "libraryName": {
              "contractScope": null,
              "id": 809,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2741,
              "src": "473:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$2741",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "467:27:7",
            "typeName": {
              "id": 810,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "MedianOracle.Report",
            "id": 816,
            "members": [
              {
                "constant": false,
                "id": 813,
                "name": "timestamp",
                "nodeType": "VariableDeclaration",
                "scope": 816,
                "src": "524:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 812,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "524:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 815,
                "name": "payload",
                "nodeType": "VariableDeclaration",
                "scope": 816,
                "src": "551:15:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 814,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "551:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Report",
            "nodeType": "StructDefinition",
            "scope": 1359,
            "src": "500:73:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 819,
            "name": "providers",
            "nodeType": "VariableDeclaration",
            "scope": 1359,
            "src": "637:26:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 817,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "637:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 818,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "637:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 825,
            "name": "providerReports",
            "nodeType": "VariableDeclaration",
            "scope": 1359,
            "src": "775:53:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
              "typeString": "mapping(address => struct MedianOracle.Report[2])"
            },
            "typeName": {
              "id": 824,
              "keyType": {
                "id": 820,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "784:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "775:30:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                "typeString": "mapping(address => struct MedianOracle.Report[2])"
              },
              "valueType": {
                "baseType": {
                  "contractScope": null,
                  "id": 821,
                  "name": "Report",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 816,
                  "src": "795:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Report_$816_storage_ptr",
                    "typeString": "struct MedianOracle.Report"
                  }
                },
                "id": 823,
                "length": {
                  "argumentTypes": null,
                  "hexValue": "32",
                  "id": 822,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "802:1:7",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": null,
                    "typeString": null
                  },
                  "value": "2"
                },
                "nodeType": "ArrayTypeName",
                "src": "795:9:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage_ptr",
                  "typeString": "struct MedianOracle.Report[2]"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 829,
            "name": "ProviderAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "indexed": false,
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 829,
                  "src": "855:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "855:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "854:18:7"
            },
            "src": "835:38:7"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 833,
            "name": "ProviderRemoved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 831,
                  "indexed": false,
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 833,
                  "src": "900:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "900:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "899:18:7"
            },
            "src": "878:40:7"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 837,
            "name": "ReportTimestampOutOfRange",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 835,
                  "indexed": false,
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 837,
                  "src": "955:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "955:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "954:18:7"
            },
            "src": "923:50:7"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 845,
            "name": "ProviderReportPushed",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 839,
                  "indexed": true,
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1005:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 841,
                  "indexed": false,
                  "name": "payload",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1031:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "indexed": false,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "scope": 845,
                  "src": "1048:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1004:62:7"
            },
            "src": "978:89:7"
          },
          {
            "constant": false,
            "id": 847,
            "name": "reportExpirationTimeSec",
            "nodeType": "VariableDeclaration",
            "scope": 1359,
            "src": "1144:38:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 846,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1144:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 849,
            "name": "reportDelaySec",
            "nodeType": "VariableDeclaration",
            "scope": 1359,
            "src": "1285:29:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 848,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1285:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 852,
            "name": "minimumProviders",
            "nodeType": "VariableDeclaration",
            "scope": 1359,
            "src": "1426:35:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 850,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1426:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 851,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1460:1:7",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 855,
            "name": "MAX_REPORT_EXPIRATION_TIME",
            "nodeType": "VariableDeclaration",
            "scope": 1359,
            "src": "1617:63:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 853,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1617:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "353230",
              "id": 854,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1671:9:7",
              "subdenomination": "weeks",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_314496000_by_1",
                "typeString": "int_const 314496000"
              },
              "value": "520"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "2283:268:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 865,
                          "name": "reportExpirationTimeSec_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 857,
                          "src": "2301:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 866,
                          "name": "MAX_REPORT_EXPIRATION_TIME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "2329:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2301:54:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 864,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "2293:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 869,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:63:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 871,
                          "name": "minimumProviders_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 861,
                          "src": "2374:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2394:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2374:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 870,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "2366:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2366:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 875,
                  "nodeType": "ExpressionStatement",
                  "src": "2366:30:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 876,
                      "name": "reportExpirationTimeSec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 847,
                      "src": "2406:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 877,
                      "name": "reportExpirationTimeSec_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 857,
                      "src": "2432:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2406:50:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 879,
                  "nodeType": "ExpressionStatement",
                  "src": "2406:50:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 880,
                      "name": "reportDelaySec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "2466:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 881,
                      "name": "reportDelaySec_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 859,
                      "src": "2483:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2466:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 883,
                  "nodeType": "ExpressionStatement",
                  "src": "2466:32:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 884,
                      "name": "minimumProviders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 852,
                      "src": "2508:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 885,
                      "name": "minimumProviders_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 861,
                      "src": "2527:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2508:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 887,
                  "nodeType": "ExpressionStatement",
                  "src": "2508:36:7"
                }
              ]
            },
            "documentation": "@param reportExpirationTimeSec_ The number of seconds after which the\n                                report is deemed expired.\n@param reportDelaySec_ The number of seconds since reporting that has to\n                       pass before a report is usable\n@param minimumProviders_ The minimum number of providers with valid\n                         reports to consider the aggregate report valid.",
            "id": 889,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 862,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 857,
                  "name": "reportExpirationTimeSec_",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "2146:32:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2146:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 859,
                  "name": "reportDelaySec_",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "2196:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2196:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 861,
                  "name": "minimumProviders_",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "2237:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 860,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2237:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2145:118:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2283:0:7"
            },
            "scope": 1359,
            "src": "2134:417:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 906,
              "nodeType": "Block",
              "src": "2850:140:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 897,
                          "name": "reportExpirationTimeSec_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "2868:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 898,
                          "name": "MAX_REPORT_EXPIRATION_TIME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "2896:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2868:54:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 896,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "2860:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2860:63:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 901,
                  "nodeType": "ExpressionStatement",
                  "src": "2860:63:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 902,
                      "name": "reportExpirationTimeSec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 847,
                      "src": "2933:23:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 903,
                      "name": "reportExpirationTimeSec_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 891,
                      "src": "2959:24:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2933:50:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "2933:50:7"
                }
              ]
            },
            "documentation": "@notice Sets the report expiration period.\n@param reportExpirationTimeSec_ The number of seconds after which the\n       report is deemed expired.",
            "id": 907,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 894,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 893,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2784,
                  "src": "2836:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2836:9:7"
              }
            ],
            "name": "setReportExpirationTimeSec",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 891,
                  "name": "reportExpirationTimeSec_",
                  "nodeType": "VariableDeclaration",
                  "scope": 907,
                  "src": "2777:32:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2776:34:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2850:0:7"
            },
            "scope": 1359,
            "src": "2741:249:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 918,
              "nodeType": "Block",
              "src": "3273:49:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 914,
                      "name": "reportDelaySec",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 849,
                      "src": "3283:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 915,
                      "name": "reportDelaySec_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 909,
                      "src": "3300:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3283:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 917,
                  "nodeType": "ExpressionStatement",
                  "src": "3283:32:7"
                }
              ]
            },
            "documentation": "@notice Sets the time period since reporting that has to pass before a\n        report is usable.\n@param reportDelaySec_ The new delay period in seconds.",
            "id": 919,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 912,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 911,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2784,
                  "src": "3259:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3259:9:7"
              }
            ],
            "name": "setReportDelaySec",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "name": "reportDelaySec_",
                  "nodeType": "VariableDeclaration",
                  "scope": 919,
                  "src": "3209:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3209:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3208:25:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3273:0:7"
            },
            "scope": 1359,
            "src": "3182:140:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 936,
              "nodeType": "Block",
              "src": "3630:93:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 927,
                          "name": "minimumProviders_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 921,
                          "src": "3648:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3668:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3648:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "3640:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3640:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "3640:30:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 932,
                      "name": "minimumProviders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 852,
                      "src": "3680:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 933,
                      "name": "minimumProviders_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 921,
                      "src": "3699:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3680:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "3680:36:7"
                }
              ]
            },
            "documentation": "@notice Sets the minimum number of providers with valid reports to\n        consider the aggregate report valid.\n@param minimumProviders_ The new minimum number of providers.",
            "id": 937,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 924,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 923,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2784,
                  "src": "3616:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3616:9:7"
              }
            ],
            "name": "setMinimumProviders",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 921,
                  "name": "minimumProviders_",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "3564:25:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3564:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3563:27:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3630:0:7"
            },
            "scope": 1359,
            "src": "3535:188:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "3923:658:7",
              "statements": [
                {
                  "assignments": [
                    943
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 943,
                      "name": "providerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 1030,
                      "src": "3933:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 942,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3933:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 946,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 944,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3057,
                      "src": "3959:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "3959:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3933:36:7"
                },
                {
                  "assignments": [
                    951
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 951,
                      "name": "reports",
                      "nodeType": "VariableDeclaration",
                      "scope": 1030,
                      "src": "3979:25:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage_ptr",
                        "typeString": "struct MedianOracle.Report[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "contractScope": null,
                          "id": 949,
                          "name": "Report",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 816,
                          "src": "3979:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Report_$816_storage_ptr",
                            "typeString": "struct MedianOracle.Report"
                          }
                        },
                        "id": 950,
                        "length": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3986:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "3979:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage_ptr",
                          "typeString": "struct MedianOracle.Report[2]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 955,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 952,
                      "name": "providerReports",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 825,
                      "src": "4007:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                        "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                      }
                    },
                    "id": 954,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 953,
                      "name": "providerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "4023:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4007:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                      "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3979:60:7"
                },
                {
                  "assignments": [
                    960
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 960,
                      "name": "timestamps",
                      "nodeType": "VariableDeclaration",
                      "scope": 1030,
                      "src": "4049:28:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                        "typeString": "uint256[2]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 958,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4049:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 959,
                        "length": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4057:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": null,
                            "typeString": null
                          },
                          "value": "2"
                        },
                        "nodeType": "ArrayTypeName",
                        "src": "4049:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                          "typeString": "uint256[2]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 970,
                  "initialValue": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 961,
                            "name": "reports",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "4081:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage_ptr",
                              "typeString": "struct MedianOracle.Report storage ref[2] storage pointer"
                            }
                          },
                          "id": 963,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4089:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4081:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Report_$816_storage",
                            "typeString": "struct MedianOracle.Report storage ref"
                          }
                        },
                        "id": 964,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 813,
                        "src": "4081:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 965,
                            "name": "reports",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 951,
                            "src": "4103:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage_ptr",
                              "typeString": "struct MedianOracle.Report storage ref[2] storage pointer"
                            }
                          },
                          "id": 967,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4111:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4103:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Report_$816_storage",
                            "typeString": "struct MedianOracle.Report storage ref"
                          }
                        },
                        "id": 968,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 813,
                        "src": "4103:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 969,
                    "isConstant": false,
                    "isInlineArray": true,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4080:44:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                      "typeString": "uint256[2] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4049:75:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 972,
                            "name": "timestamps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 960,
                            "src": "4143:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          "id": 974,
                          "indexExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 973,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4154:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4143:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4159:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4143:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "4135:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4135:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "4135:26:7"
                },
                {
                  "assignments": [
                    980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 980,
                      "name": "index_recent",
                      "nodeType": "VariableDeclaration",
                      "scope": 1030,
                      "src": "4172:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 979,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4172:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 991,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 981,
                          "name": "timestamps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "4193:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 983,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4204:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4193:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 984,
                          "name": "timestamps",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 960,
                          "src": "4210:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                            "typeString": "uint256[2] memory"
                          }
                        },
                        "id": 986,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4221:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4210:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4193:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4230:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "4193:38:7",
                    "trueExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4226:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4172:59:7"
                },
                {
                  "assignments": [
                    993
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 993,
                      "name": "index_past",
                      "nodeType": "VariableDeclaration",
                      "scope": 1030,
                      "src": "4241:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 992,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4241:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 997,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4260:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 995,
                      "name": "index_recent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 980,
                      "src": "4264:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "4260:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4241:35:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1003,
                              "name": "reportDelaySec",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 849,
                              "src": "4391:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 999,
                                "name": "timestamps",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 960,
                                "src": "4362:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                  "typeString": "uint256[2] memory"
                                }
                              },
                              "id": 1001,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1000,
                                "name": "index_recent",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 980,
                                "src": "4373:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4362:24:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2720,
                            "src": "4362:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4362:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1005,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3059,
                          "src": "4410:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4362:51:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 998,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "4354:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4354:60:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1008,
                  "nodeType": "ExpressionStatement",
                  "src": "4354:60:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1009,
                          "name": "reports",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 951,
                          "src": "4425:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage_ptr",
                            "typeString": "struct MedianOracle.Report storage ref[2] storage pointer"
                          }
                        },
                        "id": 1011,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1010,
                          "name": "index_past",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 993,
                          "src": "4433:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4425:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Report_$816_storage",
                          "typeString": "struct MedianOracle.Report storage ref"
                        }
                      },
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 813,
                      "src": "4425:29:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1013,
                      "name": "now",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3059,
                      "src": "4457:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4425:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "4425:35:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 1016,
                          "name": "reports",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 951,
                          "src": "4470:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage_ptr",
                            "typeString": "struct MedianOracle.Report storage ref[2] storage pointer"
                          }
                        },
                        "id": 1018,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 1017,
                          "name": "index_past",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 993,
                          "src": "4478:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4470:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Report_$816_storage",
                          "typeString": "struct MedianOracle.Report storage ref"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "payload",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 815,
                      "src": "4470:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1020,
                      "name": "payload",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 939,
                      "src": "4500:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4470:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "4470:37:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1024,
                        "name": "providerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 943,
                        "src": "4544:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1025,
                        "name": "payload",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "4561:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1026,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3059,
                        "src": "4570:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1023,
                      "name": "ProviderReportPushed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 845,
                      "src": "4523:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4523:51:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1028,
                  "nodeType": "EmitStatement",
                  "src": "4518:56:7"
                }
              ]
            },
            "documentation": "@notice Pushes a report for the calling provider.\n@param payload is expected to be 18 decimal fixed point number.",
            "id": 1030,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "pushReport",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "name": "payload",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "3893:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3893:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3892:17:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3923:0:7"
            },
            "scope": 1359,
            "src": "3873:708:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1067,
              "nodeType": "Block",
              "src": "4702:236:7",
              "statements": [
                {
                  "assignments": [
                    1034
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1034,
                      "name": "providerAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 1068,
                      "src": "4712:23:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1033,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4712:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1037,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1035,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3057,
                      "src": "4738:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "4738:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4712:36:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1039,
                                "name": "providerReports",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 825,
                                "src": "4767:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                                  "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                                }
                              },
                              "id": 1041,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1040,
                                "name": "providerAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1034,
                                "src": "4783:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4767:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                                "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                              }
                            },
                            "id": 1043,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4800:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4767:35:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Report_$816_storage",
                              "typeString": "struct MedianOracle.Report storage ref"
                            }
                          },
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 813,
                          "src": "4767:45:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4815:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4767:49:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "4758:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4758:59:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "4758:59:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1049,
                            "name": "providerReports",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "4827:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                              "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                            }
                          },
                          "id": 1052,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1050,
                            "name": "providerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1034,
                            "src": "4843:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4827:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                            "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                          }
                        },
                        "id": 1053,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4860:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4827:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Report_$816_storage",
                          "typeString": "struct MedianOracle.Report storage ref"
                        }
                      },
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 813,
                      "src": "4827:45:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4873:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4827:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "4827:47:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1058,
                            "name": "providerReports",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "4884:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                              "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                            }
                          },
                          "id": 1061,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1059,
                            "name": "providerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1034,
                            "src": "4900:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4884:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                            "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                          }
                        },
                        "id": 1062,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4917:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4884:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Report_$816_storage",
                          "typeString": "struct MedianOracle.Report storage ref"
                        }
                      },
                      "id": 1063,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 813,
                      "src": "4884:45:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4930:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4884:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1066,
                  "nodeType": "ExpressionStatement",
                  "src": "4884:47:7"
                }
              ]
            },
            "documentation": "@notice Invalidates the reports of the calling provider.",
            "id": 1068,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "purgeReports",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4686:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1032,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4702:0:7"
            },
            "scope": 1359,
            "src": "4665:273:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1248,
              "nodeType": "Block",
              "src": "5301:2051:7",
              "statements": [
                {
                  "assignments": [
                    1076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1076,
                      "name": "reportsCount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "5311:20:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1075,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5311:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1079,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1077,
                      "name": "providers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "5334:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1078,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "5334:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5311:39:7"
                },
                {
                  "assignments": [
                    1083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1083,
                      "name": "validReports",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "5360:29:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1081,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5360:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1082,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5360:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1089,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1087,
                        "name": "reportsCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "5406:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5392:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1084,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5396:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1085,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "5396:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5392:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5360:59:7"
                },
                {
                  "assignments": [
                    1091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1091,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "5429:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1090,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5429:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1093,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 1092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5444:1:7",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5429:16:7"
                },
                {
                  "assignments": [
                    1095
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1095,
                      "name": "minValidTimestamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "5455:25:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1094,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5455:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1100,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1098,
                        "name": "reportExpirationTimeSec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 847,
                        "src": "5492:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1096,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3059,
                        "src": "5484:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2696,
                      "src": "5484:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5484:32:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5455:61:7"
                },
                {
                  "assignments": [
                    1102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1102,
                      "name": "maxValidTimestamp",
                      "nodeType": "VariableDeclaration",
                      "scope": 1249,
                      "src": "5526:25:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1101,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5526:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1107,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1105,
                        "name": "reportDelaySec",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 849,
                        "src": "5563:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1103,
                        "name": "now",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3059,
                        "src": "5555:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 1104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2696,
                      "src": "5555:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5555:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5526:52:7"
                },
                {
                  "body": {
                    "id": 1229,
                    "nodeType": "Block",
                    "src": "5632:1567:7",
                    "statements": [
                      {
                        "assignments": [
                          1119
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1119,
                            "name": "providerAddress",
                            "nodeType": "VariableDeclaration",
                            "scope": 1249,
                            "src": "5646:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1118,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5646:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1123,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1120,
                            "name": "providers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 819,
                            "src": "5672:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 1122,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1121,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1109,
                            "src": "5682:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5672:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5646:38:7"
                      },
                      {
                        "assignments": [
                          1128
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1128,
                            "name": "reports",
                            "nodeType": "VariableDeclaration",
                            "scope": 1249,
                            "src": "5698:24:7",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Report_$816_memory_$2_memory_ptr",
                              "typeString": "struct MedianOracle.Report[2]"
                            },
                            "typeName": {
                              "baseType": {
                                "contractScope": null,
                                "id": 1126,
                                "name": "Report",
                                "nodeType": "UserDefinedTypeName",
                                "referencedDeclaration": 816,
                                "src": "5698:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$816_storage_ptr",
                                  "typeString": "struct MedianOracle.Report"
                                }
                              },
                              "id": 1127,
                              "length": {
                                "argumentTypes": null,
                                "hexValue": "32",
                                "id": 1125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5705:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                },
                                "value": "2"
                              },
                              "nodeType": "ArrayTypeName",
                              "src": "5698:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage_ptr",
                                "typeString": "struct MedianOracle.Report[2]"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1132,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1129,
                            "name": "providerReports",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "5725:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                              "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                            }
                          },
                          "id": 1131,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1130,
                            "name": "providerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1119,
                            "src": "5741:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5725:32:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                            "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5698:59:7"
                      },
                      {
                        "assignments": [
                          1134
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1134,
                            "name": "index_recent",
                            "nodeType": "VariableDeclaration",
                            "scope": 1249,
                            "src": "5772:18:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 1133,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5772:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1147,
                        "initialValue": {
                          "argumentTypes": null,
                          "condition": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1135,
                                  "name": "reports",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1128,
                                  "src": "5793:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Report_$816_memory_$2_memory_ptr",
                                    "typeString": "struct MedianOracle.Report memory[2] memory"
                                  }
                                },
                                "id": 1137,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "30",
                                  "id": 1136,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5801:1:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5793:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$816_memory",
                                  "typeString": "struct MedianOracle.Report memory"
                                }
                              },
                              "id": 1138,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 813,
                              "src": "5793:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1139,
                                  "name": "reports",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1128,
                                  "src": "5817:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Report_$816_memory_$2_memory_ptr",
                                    "typeString": "struct MedianOracle.Report memory[2] memory"
                                  }
                                },
                                "id": 1141,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "31",
                                  "id": 1140,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "5825:1:7",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5817:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Report_$816_memory",
                                  "typeString": "struct MedianOracle.Report memory"
                                }
                              },
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 813,
                              "src": "5817:20:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5793:44:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5844:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "id": 1146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "5793:52:7",
                          "trueExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5840:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5772:73:7"
                      },
                      {
                        "assignments": [
                          1149
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1149,
                            "name": "index_past",
                            "nodeType": "VariableDeclaration",
                            "scope": 1249,
                            "src": "5859:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 1148,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "5859:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1153,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5878:1:7",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1151,
                            "name": "index_recent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1134,
                            "src": "5882:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "5878:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5859:35:7"
                      },
                      {
                        "assignments": [
                          1155
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1155,
                            "name": "reportTimestampRecent",
                            "nodeType": "VariableDeclaration",
                            "scope": 1249,
                            "src": "5908:29:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1154,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5908:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1160,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1156,
                              "name": "reports",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1128,
                              "src": "5940:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Report_$816_memory_$2_memory_ptr",
                                "typeString": "struct MedianOracle.Report memory[2] memory"
                              }
                            },
                            "id": 1158,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1157,
                              "name": "index_recent",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1134,
                              "src": "5948:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5940:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Report_$816_memory",
                              "typeString": "struct MedianOracle.Report memory"
                            }
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 813,
                          "src": "5940:31:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5908:63:7"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 1161,
                            "name": "reportTimestampRecent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1155,
                            "src": "5989:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1162,
                            "name": "maxValidTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1102,
                            "src": "6013:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5989:41:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1227,
                          "nodeType": "Block",
                          "src": "6753:436:7",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1205,
                                  "name": "reportTimestampRecent",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1155,
                                  "src": "6827:21:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1206,
                                  "name": "minValidTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1095,
                                  "src": "6851:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6827:41:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 1225,
                                "nodeType": "Block",
                                "src": "7013:162:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1223,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1213,
                                          "name": "validReports",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1083,
                                          "src": "7079:12:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 1216,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1215,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "UnaryOperation",
                                          "operator": "++",
                                          "prefix": false,
                                          "src": "7092:6:7",
                                          "subExpression": {
                                            "argumentTypes": null,
                                            "id": 1214,
                                            "name": "size",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1091,
                                            "src": "7092:4:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "7079:20:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "id": 1217,
                                              "name": "providerReports",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 825,
                                              "src": "7102:15:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                                                "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                                              }
                                            },
                                            "id": 1219,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 1218,
                                              "name": "providerAddress",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1119,
                                              "src": "7118:15:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "7102:32:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                                              "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                                            }
                                          },
                                          "id": 1221,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 1220,
                                            "name": "index_recent",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1134,
                                            "src": "7135:12:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "7102:46:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Report_$816_storage",
                                            "typeString": "struct MedianOracle.Report storage ref"
                                          }
                                        },
                                        "id": 1222,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "payload",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 815,
                                        "src": "7102:54:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "7079:77:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 1224,
                                    "nodeType": "ExpressionStatement",
                                    "src": "7079:77:7"
                                  }
                                ]
                              },
                              "id": 1226,
                              "nodeType": "IfStatement",
                              "src": "6823:352:7",
                              "trueBody": {
                                "id": 1212,
                                "nodeType": "Block",
                                "src": "6870:137:7",
                                "statements": [
                                  {
                                    "eventCall": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1209,
                                          "name": "providerAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1119,
                                          "src": "6972:15:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1208,
                                        "name": "ReportTimestampOutOfRange",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 837,
                                        "src": "6946:25:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function (address)"
                                        }
                                      },
                                      "id": 1210,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6946:42:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1211,
                                    "nodeType": "EmitStatement",
                                    "src": "6941:47:7"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 1228,
                        "nodeType": "IfStatement",
                        "src": "5985:1204:7",
                        "trueBody": {
                          "id": 1204,
                          "nodeType": "Block",
                          "src": "6032:715:7",
                          "statements": [
                            {
                              "assignments": [
                                1165
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1165,
                                  "name": "reportTimestampPast",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1249,
                                  "src": "6098:27:7",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1164,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6098:7:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1172,
                              "initialValue": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1166,
                                      "name": "providerReports",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 825,
                                      "src": "6128:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                                        "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                                      }
                                    },
                                    "id": 1168,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1167,
                                      "name": "providerAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1119,
                                      "src": "6144:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "6128:32:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                                      "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                                    }
                                  },
                                  "id": 1170,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 1169,
                                    "name": "index_past",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1149,
                                    "src": "6161:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6128:44:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Report_$816_storage",
                                    "typeString": "struct MedianOracle.Report storage ref"
                                  }
                                },
                                "id": 1171,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 813,
                                "src": "6128:54:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6098:84:7"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1175,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 1173,
                                  "name": "reportTimestampPast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1165,
                                  "src": "6204:19:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 1174,
                                  "name": "minValidTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1095,
                                  "src": "6226:17:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6204:39:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "condition": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1183,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 1181,
                                    "name": "reportTimestampPast",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1165,
                                    "src": "6390:19:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "id": 1182,
                                    "name": "maxValidTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1102,
                                    "src": "6412:17:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6390:39:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "falseBody": {
                                  "id": 1201,
                                  "nodeType": "Block",
                                  "src": "6575:158:7",
                                  "statements": [
                                    {
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 1199,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "argumentTypes": null,
                                          "baseExpression": {
                                            "argumentTypes": null,
                                            "id": 1189,
                                            "name": "validReports",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1083,
                                            "src": "6639:12:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 1192,
                                          "indexExpression": {
                                            "argumentTypes": null,
                                            "id": 1191,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "6652:6:7",
                                            "subExpression": {
                                              "argumentTypes": null,
                                              "id": 1190,
                                              "name": "size",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1091,
                                              "src": "6652:4:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": true,
                                          "nodeType": "IndexAccess",
                                          "src": "6639:20:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "baseExpression": {
                                              "argumentTypes": null,
                                              "baseExpression": {
                                                "argumentTypes": null,
                                                "id": 1193,
                                                "name": "providerReports",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 825,
                                                "src": "6662:15:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                                                  "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                                                }
                                              },
                                              "id": 1195,
                                              "indexExpression": {
                                                "argumentTypes": null,
                                                "id": 1194,
                                                "name": "providerAddress",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1119,
                                                "src": "6678:15:7",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "6662:32:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                                                "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                                              }
                                            },
                                            "id": 1197,
                                            "indexExpression": {
                                              "argumentTypes": null,
                                              "id": 1196,
                                              "name": "index_past",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1149,
                                              "src": "6695:10:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "6662:44:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Report_$816_storage",
                                              "typeString": "struct MedianOracle.Report storage ref"
                                            }
                                          },
                                          "id": 1198,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "payload",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 815,
                                          "src": "6662:52:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "6639:75:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "id": 1200,
                                      "nodeType": "ExpressionStatement",
                                      "src": "6639:75:7"
                                    }
                                  ]
                                },
                                "id": 1202,
                                "nodeType": "IfStatement",
                                "src": "6386:347:7",
                                "trueBody": {
                                  "id": 1188,
                                  "nodeType": "Block",
                                  "src": "6431:138:7",
                                  "statements": [
                                    {
                                      "eventCall": {
                                        "argumentTypes": null,
                                        "arguments": [
                                          {
                                            "argumentTypes": null,
                                            "id": 1185,
                                            "name": "providerAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1119,
                                            "src": "6534:15:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 1184,
                                          "name": "ReportTimestampOutOfRange",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 837,
                                          "src": "6508:25:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                            "typeString": "function (address)"
                                          }
                                        },
                                        "id": 1186,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "6508:42:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$__$",
                                          "typeString": "tuple()"
                                        }
                                      },
                                      "id": 1187,
                                      "nodeType": "EmitStatement",
                                      "src": "6503:47:7"
                                    }
                                  ]
                                }
                              },
                              "id": 1203,
                              "nodeType": "IfStatement",
                              "src": "6200:533:7",
                              "trueBody": {
                                "id": 1180,
                                "nodeType": "Block",
                                "src": "6245:135:7",
                                "statements": [
                                  {
                                    "eventCall": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 1177,
                                          "name": "providerAddress",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1119,
                                          "src": "6345:15:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 1176,
                                        "name": "ReportTimestampOutOfRange",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 837,
                                        "src": "6319:25:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                          "typeString": "function (address)"
                                        }
                                      },
                                      "id": 1178,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6319:42:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1179,
                                    "nodeType": "EmitStatement",
                                    "src": "6314:47:7"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1112,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1109,
                      "src": "5609:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1113,
                      "name": "reportsCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1076,
                      "src": "5613:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5609:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1230,
                  "initializationExpression": {
                    "assignments": [
                      1109
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1109,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "5594:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1108,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5594:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1111,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5606:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5594:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5627:3:7",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1115,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1109,
                        "src": "5627:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1117,
                    "nodeType": "ExpressionStatement",
                    "src": "5627:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "5589:1610:7"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1231,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1091,
                      "src": "7213:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 1232,
                      "name": "minimumProviders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 852,
                      "src": "7220:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7213:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1239,
                  "nodeType": "IfStatement",
                  "src": "7209:71:7",
                  "trueBody": {
                    "id": 1238,
                    "nodeType": "Block",
                    "src": "7238:42:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7260:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "66616c7365",
                              "id": 1235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7263:5:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "id": 1236,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7259:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_bool_$",
                            "typeString": "tuple(int_const 0,bool)"
                          }
                        },
                        "functionReturnParameters": 1074,
                        "id": 1237,
                        "nodeType": "Return",
                        "src": "7252:17:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1242,
                            "name": "validReports",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1083,
                            "src": "7319:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 1243,
                            "name": "size",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1091,
                            "src": "7333:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1240,
                            "name": "Select",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2613,
                            "src": "7298:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Select_$2613_$",
                              "typeString": "type(library Select)"
                            }
                          },
                          "id": 1241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "computeMedian",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2612,
                          "src": "7298:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7298:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74727565",
                        "id": 1245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7340:4:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "id": 1246,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7297:48:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 1074,
                  "id": 1247,
                  "nodeType": "Return",
                  "src": "7290:55:7"
                }
              ]
            },
            "documentation": "@notice Computes median of provider reports whose timestamps are in the\n        valid timestamp range.\n@return AggregatedValue: Median of providers reported values.\n        valid: Boolean indicating an aggregated value was computed successfully.",
            "id": 1249,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "getData",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5245:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1074,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1071,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1249,
                  "src": "5282:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1070,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5282:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1073,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1249,
                  "src": "5291:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1072,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5291:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5281:15:7"
            },
            "scope": 1359,
            "src": "5229:2123:7",
            "stateMutability": "nonpayable",
            "superFunction": 803,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1286,
              "nodeType": "Block",
              "src": "7538:193:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1257,
                                "name": "providerReports",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 825,
                                "src": "7556:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                                  "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                                }
                              },
                              "id": 1259,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1258,
                                "name": "provider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1251,
                                "src": "7572:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7556:25:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                                "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                              }
                            },
                            "id": 1261,
                            "indexExpression": {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1260,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7582:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7556:28:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Report_$816_storage",
                              "typeString": "struct MedianOracle.Report storage ref"
                            }
                          },
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 813,
                          "src": "7556:38:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7598:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7556:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1256,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3060,
                        3061
                      ],
                      "referencedDeclaration": 3060,
                      "src": "7548:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7548:52:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1266,
                  "nodeType": "ExpressionStatement",
                  "src": "7548:52:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1270,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "7625:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1267,
                        "name": "providers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "7610:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "7610:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 1271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7610:24:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1272,
                  "nodeType": "ExpressionStatement",
                  "src": "7610:24:7"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1273,
                            "name": "providerReports",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "7644:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                              "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                            }
                          },
                          "id": 1276,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1274,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1251,
                            "src": "7660:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7644:25:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                            "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                          }
                        },
                        "id": 1277,
                        "indexExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7670:1:7",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7644:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Report_$816_storage",
                          "typeString": "struct MedianOracle.Report storage ref"
                        }
                      },
                      "id": 1278,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 813,
                      "src": "7644:38:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7685:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "7644:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1281,
                  "nodeType": "ExpressionStatement",
                  "src": "7644:42:7"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1283,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1251,
                        "src": "7715:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1282,
                      "name": "ProviderAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 829,
                      "src": "7701:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7701:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1285,
                  "nodeType": "EmitStatement",
                  "src": "7696:28:7"
                }
              ]
            },
            "documentation": "@notice Authorizes a provider.\n@param provider Address of the provider.",
            "id": 1287,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1254,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1253,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2784,
                  "src": "7524:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7524:9:7"
              }
            ],
            "name": "addProvider",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1251,
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "7481:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7481:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7480:18:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7538:0:7"
            },
            "scope": 1359,
            "src": "7460:271:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1348,
              "nodeType": "Block",
              "src": "7929:415:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7939:32:7",
                    "subExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1294,
                        "name": "providerReports",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 825,
                        "src": "7946:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Report_$816_storage_$2_storage_$",
                          "typeString": "mapping(address => struct MedianOracle.Report storage ref[2] storage ref)"
                        }
                      },
                      "id": 1296,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1295,
                        "name": "provider",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "7962:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7946:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Report_$816_storage_$2_storage",
                        "typeString": "struct MedianOracle.Report storage ref[2] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1298,
                  "nodeType": "ExpressionStatement",
                  "src": "7939:32:7"
                },
                {
                  "body": {
                    "id": 1346,
                    "nodeType": "Block",
                    "src": "8028:310:7",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1310,
                              "name": "providers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 819,
                              "src": "8046:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 1312,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1311,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1300,
                              "src": "8056:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8046:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1313,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "8062:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8046:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 1345,
                        "nodeType": "IfStatement",
                        "src": "8042:286:7",
                        "trueBody": {
                          "id": 1344,
                          "nodeType": "Block",
                          "src": "8072:256:7",
                          "statements": [
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "id": 1315,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1300,
                                    "src": "8094:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 1316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8098:1:7",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "8094:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1318,
                                    "name": "providers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 819,
                                    "src": "8104:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1319,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "8104:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8094:26:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": null,
                              "id": 1333,
                              "nodeType": "IfStatement",
                              "src": "8090:117:7",
                              "trueBody": {
                                "id": 1332,
                                "nodeType": "Block",
                                "src": "8122:85:7",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1330,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1321,
                                          "name": "providers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 819,
                                          "src": "8144:9:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1323,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "id": 1322,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1300,
                                          "src": "8154:1:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "8144:12:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "argumentTypes": null,
                                        "baseExpression": {
                                          "argumentTypes": null,
                                          "id": 1324,
                                          "name": "providers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 819,
                                          "src": "8159:9:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                            "typeString": "address[] storage ref"
                                          }
                                        },
                                        "id": 1329,
                                        "indexExpression": {
                                          "argumentTypes": null,
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1328,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "argumentTypes": null,
                                            "expression": {
                                              "argumentTypes": null,
                                              "id": 1325,
                                              "name": "providers",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 819,
                                              "src": "8169:9:7",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                                "typeString": "address[] storage ref"
                                              }
                                            },
                                            "id": 1326,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": null,
                                            "src": "8169:16:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "argumentTypes": null,
                                            "hexValue": "31",
                                            "id": 1327,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "8186:1:7",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "8169:18:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "8159:29:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "src": "8144:44:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 1331,
                                    "nodeType": "ExpressionStatement",
                                    "src": "8144:44:7"
                                  }
                                ]
                              }
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 1337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "--",
                                "prefix": false,
                                "src": "8224:18:7",
                                "subExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 1334,
                                    "name": "providers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 819,
                                    "src": "8224:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 1336,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "8224:16:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1338,
                              "nodeType": "ExpressionStatement",
                              "src": "8224:18:7"
                            },
                            {
                              "eventCall": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 1340,
                                    "name": "provider",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1289,
                                    "src": "8281:8:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1339,
                                  "name": "ProviderRemoved",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 833,
                                  "src": "8265:15:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                                    "typeString": "function (address)"
                                  }
                                },
                                "id": 1341,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8265:25:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1342,
                              "nodeType": "EmitStatement",
                              "src": "8260:30:7"
                            },
                            {
                              "id": 1343,
                              "nodeType": "Break",
                              "src": "8308:5:7"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1303,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1300,
                      "src": "8001:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 1304,
                        "name": "providers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 819,
                        "src": "8005:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1305,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "8005:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8001:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1347,
                  "initializationExpression": {
                    "assignments": [
                      1300
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1300,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 1349,
                        "src": "7986:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1299,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7986:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 1302,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7998:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "7986:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 1308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "8023:3:7",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 1307,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1300,
                        "src": "8023:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1309,
                    "nodeType": "ExpressionStatement",
                    "src": "8023:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "7981:357:7"
                }
              ]
            },
            "documentation": "@notice Revokes provider authorization.\n@param provider Address of the provider.",
            "id": 1349,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1292,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1291,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2784,
                  "src": "7915:9:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7915:9:7"
              }
            ],
            "name": "removeProvider",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1290,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "name": "provider",
                  "nodeType": "VariableDeclaration",
                  "scope": 1349,
                  "src": "7872:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7872:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7871:18:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1293,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7929:0:7"
            },
            "scope": 1359,
            "src": "7848:496:7",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1357,
              "nodeType": "Block",
              "src": "8502:40:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 1354,
                      "name": "providers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 819,
                      "src": "8519:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 1355,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "8519:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1353,
                  "id": 1356,
                  "nodeType": "Return",
                  "src": "8512:23:7"
                }
              ]
            },
            "documentation": "@return The number of authorized providers.",
            "id": 1358,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "providersSize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8439:2:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 1353,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1352,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1358,
                  "src": "8489:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1351,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8489:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8488:9:7"
            },
            "scope": 1359,
            "src": "8417:125:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1360,
        "src": "419:8125:7"
      }
    ],
    "src": "0:8545:7"
  },
  "bytecode": "6080604052600160055534801561001557600080fd5b50604051606080610f6083398101604081815282516020840151919093015160008054600160a060020a031916331780825592939192600160a060020a0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36312bed40083111561008b57600080fd5b6000811161009857600080fd5b600392909255600455600555610ead806100b36000396000f3006080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166312e800f181146101005780631e20d14b146101275780633bc5de301461014157806346e2577a1461016f57806350f3fc8114610190578063715018a6146101c45780638a355a57146101d95780638da5cb5b146101fa5780638f32d59b1461020f578063b577c0c714610238578063d13d59711461024d578063da6b0eea14610262578063dcbb82531461027a578063df9829851461028f578063ef35bcce146102a4578063f10864b6146102bc578063f2fde38b146102f9578063f68be5131461031a575b600080fd5b34801561010c57600080fd5b50610115610332565b60408051918252519081900360200190f35b34801561013357600080fd5b5061013f600435610338565b005b34801561014d57600080fd5b50610156610454565b6040805192835290151560208301528051918290030190f35b34801561017b57600080fd5b5061013f600160a060020a03600435166107aa565b34801561019c57600080fd5b506101a8600435610887565b60408051600160a060020a039092168252519081900360200190f35b3480156101d057600080fd5b5061013f6108af565b3480156101e557600080fd5b5061013f600160a060020a0360043516610919565b34801561020657600080fd5b506101a8610a65565b34801561021b57600080fd5b50610224610a75565b604080519115158252519081900360200190f35b34801561024457600080fd5b50610115610a86565b34801561025957600080fd5b5061013f610a8c565b34801561026e57600080fd5b5061013f600435610aca565b34801561028657600080fd5b50610115610ae2565b34801561029b57600080fd5b50610115610ae8565b3480156102b057600080fd5b5061013f600435610aee565b3480156102c857600080fd5b506102e0600160a060020a0360043516602435610b13565b6040805192835260208301919091528051918290030190f35b34801561030557600080fd5b5061013f600160a060020a0360043516610b42565b34801561032657600080fd5b5061013f600435610b61565b60045481565b600080610343610dbe565b50503360008181526002602081815260408084208151808301909252805480835293810154928201929092529394509291908190811061038257600080fd5b602083015183511015610396576001610399565b60005b9150816001039050426103ca600454858560ff166002811015156103b957fe5b60200201519063ffffffff610b8a16565b11156103d557600080fd5b428460ff8316600281106103e557fe5b600202016000018190555085848260ff1660028110151561040257fe5b6002020160010155604080518781524260208201528151600160a060020a038816927f460fcc5a1888965d48c2cab000fe20da51b1297d995af79a1924e2312d0d82b3928290030190a2505050505050565b60008060006060600080600080600061046b610dd9565b6000806000806001805490509b508b6040519080825280602002602001820160405280156104a3578160200160208202803883390190505b509a50600099506104bf60035442610ba390919063ffffffff16565b98506104d660045442610ba390919063ffffffff16565b9750600096505b8b8710156107735760018054889081106104f357fe5b6000918252602080832090910154600160a060020a03168083526002918290526040808420815180830190925291995092909190835b82821015610565578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610529565b50929750879250600191506105779050565b602002015151855151101561058d576001610590565b60005b9350600184900392508460ff8516600281106105a857fe5b6020020151519150878211156106cf57600160a060020a03861660009081526002602081905260409091209060ff85169081106105e157fe5b60020201549050888110156106315760408051600160a060020a038816815290517f71f61642cb57ac11764a2f35fb4edc5361ced458af35bbed8f5ebf708c10e3419181900360200190a16106ca565b8781111561067a5760408051600160a060020a038816815290517f71f61642cb57ac11764a2f35fb4edc5361ced458af35bbed8f5ebf708c10e3419181900360200190a16106ca565b600160a060020a03861660009081526002602081905260409091209060ff85169081106106a357fe5b60020201600101548b8b806001019c508151811015156106bf57fe5b602090810290910101525b610768565b888210156107185760408051600160a060020a038816815290517f71f61642cb57ac11764a2f35fb4edc5361ced458af35bbed8f5ebf708c10e3419181900360200190a1610768565b600160a060020a03861660009081526002602081905260409091209060ff861690811061074157fe5b60020201600101548b8b806001019c5081518110151561075d57fe5b602090810290910101525b6001909601956104dd565b6005548a10156107895760009d508d9c5061079a565b6107938b8b610bba565b60019d509d505b5050505050505050505050509091565b6107b2610a75565b15156107bd57600080fd5b600160a060020a038116600090815260026020526040902054156107e057600080fd5b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038416908117909155600090815260026020526040812090600202015560408051600160a060020a038316815290517fae9c2c6481964847714ce58f65a7f6dcc41d0d8394449bacdf161b5920c4744a9181900360200190a150565b600180548290811061089557fe5b600091825260209091200154600160a060020a0316905081565b6108b7610a75565b15156108c257600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000610923610a75565b151561092e57600080fd5b600160a060020a038216600090815260026020526040812061094f91610e07565b5060005b600154811015610a615781600160a060020a031660018281548110151561097657fe5b600091825260209091200154600160a060020a03161415610a59576001805490820114610a04576001805460001981019081106109af57fe5b60009182526020909120015460018054600160a060020a0390921691839081106109d557fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b6001805490610a17906000198301610e23565b5060408051600160a060020a038416815290517f1589f8555933761a3cff8aa925061be3b46e2dd43f621322ab611d300f62b1d99181900360200190a1610a61565b600101610953565b5050565b600054600160a060020a03165b90565b600054600160a060020a0316331490565b60055481565b3360008181526002602052604081205411610aa657600080fd5b600160a060020a031660009081526002602081905260409091206001808255910155565b610ad2610a75565b1515610add57600080fd5b600455565b60015490565b60035481565b610af6610a75565b1515610b0157600080fd5b60008111610b0e57600080fd5b600555565b600260205281600052604060002081600281101515610b2e57fe5b600202018054600190910154909250905082565b610b4a610a75565b1515610b5557600080fd5b610b5e81610d41565b50565b610b69610a75565b1515610b7457600080fd5b6312bed400811115610b8557600080fd5b600355565b600082820183811015610b9c57600080fd5b9392505050565b60008083831115610bb357600080fd5b5050900390565b600080600080600085118015610bd1575084865110155b1515610bdc57600080fd5b600192505b84831015610cb4578291505b600082118015610c2d57508582815181101515610c0657fe5b906020019060200201518660018403815181101515610c2157fe5b90602001906020020151115b15610ca9578582815181101515610c4057fe5b9060200190602002015190508560018303815181101515610c5d57fe5b906020019060200201518683815181101515610c7557fe5b602090810290910101528551819087906000198501908110610c9357fe5b6020908102909101015260001990910190610bed565b600190920191610be1565b6002850660011415610ce2578560028604815181101515610cd157fe5b906020019060200201519350610d38565b6002610d2b87600183890403815181101515610cfa57fe5b602090810290910101518860028904815181101515610d1557fe5b602090810290910101519063ffffffff610b8a16565b811515610d3457fe5b0493505b50505092915050565b600160a060020a0381161515610d5657600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60408051808201825290600290829080388339509192915050565b6080604051908101604052806002905b610df1610e4c565b815260200190600190039081610de95790505090565b5060008082556001820181905560028201819055600390910155565b815481835581811115610e4757600083815260209020610e47918101908301610e63565b505050565b604080518082019091526000808252602082015290565b610a7291905b80821115610e7d5760008155600101610e69565b50905600a165627a7a72305820dd6c250b5631475f219871a010e8b6f68d9a2c807d1edadc35a506fb4985eb150029",
  "bytecodeSha1": "e487a41ac63c0ea24cc545a0732764bd1bf0a0e5",
  "compiler": {
    "evm_version": "byzantium",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.4.24+commit.e67f0147"
  },
  "contractName": "MedianOracle",
  "coverageMap": {
    "branches": {
      "13": {
        "SafeMath.add": {
          "67": [
            1376,
            1382,
            true
          ]
        },
        "SafeMath.sub": {
          "68": [
            1159,
            1165,
            true
          ]
        }
      },
      "14": {
        "MedianOracle.setReportExpirationTimeSec": {
          "65": [
            824,
            833,
            true
          ]
        },
        "Ownable._transferOwnership": {
          "66": [
            1865,
            1887,
            true
          ]
        }
      },
      "7": {
        "MedianOracle.addProvider": {
          "59": [
            7556,
            7599,
            true
          ]
        },
        "MedianOracle.getData": {
          "53": [
            5793,
            5837,
            true
          ],
          "54": [
            5989,
            6030,
            false
          ],
          "55": [
            6204,
            6243,
            false
          ],
          "56": [
            6390,
            6429,
            false
          ],
          "57": [
            6827,
            6868,
            false
          ],
          "58": [
            7213,
            7236,
            false
          ]
        },
        "MedianOracle.purgeReports": {
          "62": [
            4767,
            4816,
            true
          ]
        },
        "MedianOracle.pushReport": {
          "50": [
            4143,
            4160,
            true
          ],
          "51": [
            4193,
            4223,
            true
          ],
          "52": [
            4362,
            4413,
            true
          ]
        },
        "MedianOracle.removeProvider": {
          "60": [
            8046,
            8070,
            false
          ],
          "61": [
            8094,
            8120,
            false
          ]
        },
        "MedianOracle.setMinimumProviders": {
          "63": [
            3648,
            3669,
            true
          ]
        },
        "MedianOracle.setReportExpirationTimeSec": {
          "64": [
            2868,
            2922,
            true
          ]
        }
      },
      "8": {
        "Select.computeMedian": {
          "69": [
            600,
            608,
            false
          ],
          "70": [
            612,
            632,
            true
          ],
          "71": [
            901,
            914,
            false
          ]
        }
      }
    },
    "statements": {
      "13": {
        "SafeMath.add": {
          "37": [
            1368,
            1383
          ],
          "38": [
            1390,
            1398
          ]
        },
        "SafeMath.sub": {
          "39": [
            1151,
            1166
          ]
        }
      },
      "14": {
        "Ownable._transferOwnership": {
          "47": [
            1857,
            1888
          ],
          "48": [
            1894,
            1937
          ],
          "49": [
            1943,
            1960
          ]
        },
        "Ownable.isOwner": {
          "26": [
            977,
            1004
          ]
        },
        "Ownable.owner": {
          "25": [
            691,
            704
          ]
        },
        "Ownable.renounceOwnership": {
          "17": [
            1325,
            1370
          ],
          "18": [
            1376,
            1395
          ]
        },
        "Ownable.transferOwnership": {
          "34": [
            1629,
            1657
          ]
        }
      },
      "7": {
        "MedianOracle.addProvider": {
          "13": [
            7548,
            7600
          ],
          "14": [
            7610,
            7634
          ],
          "15": [
            7644,
            7686
          ],
          "16": [
            7696,
            7724
          ]
        },
        "MedianOracle.getData": {
          "5": [
            6314,
            6361
          ],
          "6": [
            6503,
            6550
          ],
          "7": [
            6639,
            6714
          ],
          "8": [
            6941,
            6988
          ],
          "9": [
            7079,
            7156
          ],
          "10": [
            5627,
            5630
          ],
          "11": [
            7252,
            7269
          ],
          "12": [
            7290,
            7345
          ]
        },
        "MedianOracle.providersSize": {
          "31": [
            8512,
            8535
          ]
        },
        "MedianOracle.purgeReports": {
          "27": [
            4758,
            4817
          ],
          "28": [
            4827,
            4874
          ],
          "29": [
            4884,
            4931
          ]
        },
        "MedianOracle.pushReport": {
          "0": [
            4135,
            4161
          ],
          "1": [
            4354,
            4414
          ],
          "2": [
            4425,
            4460
          ],
          "3": [
            4470,
            4507
          ],
          "4": [
            4518,
            4574
          ]
        },
        "MedianOracle.removeProvider": {
          "19": [
            7939,
            7971
          ],
          "20": [
            8144,
            8188
          ],
          "21": [
            8224,
            8242
          ],
          "22": [
            8260,
            8290
          ],
          "23": [
            8308,
            8313
          ],
          "24": [
            8023,
            8026
          ]
        },
        "MedianOracle.setMinimumProviders": {
          "32": [
            3640,
            3670
          ],
          "33": [
            3680,
            3716
          ]
        },
        "MedianOracle.setReportDelaySec": {
          "30": [
            3283,
            3315
          ]
        },
        "MedianOracle.setReportExpirationTimeSec": {
          "35": [
            2860,
            2923
          ],
          "36": [
            2933,
            2983
          ]
        }
      },
      "8": {
        "Select.computeMedian": {
          "40": [
            592,
            633
          ],
          "41": [
            808,
            829
          ],
          "42": [
            847,
            863
          ],
          "43": [
            745,
            748
          ],
          "44": [
            673,
            676
          ],
          "45": [
            930,
            952
          ],
          "46": [
            983,
            1034
          ]
        }
      }
    }
  },
  "dependencies": [
    "IOracle",
    "Ownable",
    "SafeMath",
    "Select"
  ],
  "deployedBytecode": "6080604052600436106100fb5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166312e800f181146101005780631e20d14b146101275780633bc5de301461014157806346e2577a1461016f57806350f3fc8114610190578063715018a6146101c45780638a355a57146101d95780638da5cb5b146101fa5780638f32d59b1461020f578063b577c0c714610238578063d13d59711461024d578063da6b0eea14610262578063dcbb82531461027a578063df9829851461028f578063ef35bcce146102a4578063f10864b6146102bc578063f2fde38b146102f9578063f68be5131461031a575b600080fd5b34801561010c57600080fd5b50610115610332565b60408051918252519081900360200190f35b34801561013357600080fd5b5061013f600435610338565b005b34801561014d57600080fd5b50610156610454565b6040805192835290151560208301528051918290030190f35b34801561017b57600080fd5b5061013f600160a060020a03600435166107aa565b34801561019c57600080fd5b506101a8600435610887565b60408051600160a060020a039092168252519081900360200190f35b3480156101d057600080fd5b5061013f6108af565b3480156101e557600080fd5b5061013f600160a060020a0360043516610919565b34801561020657600080fd5b506101a8610a65565b34801561021b57600080fd5b50610224610a75565b604080519115158252519081900360200190f35b34801561024457600080fd5b50610115610a86565b34801561025957600080fd5b5061013f610a8c565b34801561026e57600080fd5b5061013f600435610aca565b34801561028657600080fd5b50610115610ae2565b34801561029b57600080fd5b50610115610ae8565b3480156102b057600080fd5b5061013f600435610aee565b3480156102c857600080fd5b506102e0600160a060020a0360043516602435610b13565b6040805192835260208301919091528051918290030190f35b34801561030557600080fd5b5061013f600160a060020a0360043516610b42565b34801561032657600080fd5b5061013f600435610b61565b60045481565b600080610343610dbe565b50503360008181526002602081815260408084208151808301909252805480835293810154928201929092529394509291908190811061038257600080fd5b602083015183511015610396576001610399565b60005b9150816001039050426103ca600454858560ff166002811015156103b957fe5b60200201519063ffffffff610b8a16565b11156103d557600080fd5b428460ff8316600281106103e557fe5b600202016000018190555085848260ff1660028110151561040257fe5b6002020160010155604080518781524260208201528151600160a060020a038816927f460fcc5a1888965d48c2cab000fe20da51b1297d995af79a1924e2312d0d82b3928290030190a2505050505050565b60008060006060600080600080600061046b610dd9565b6000806000806001805490509b508b6040519080825280602002602001820160405280156104a3578160200160208202803883390190505b509a50600099506104bf60035442610ba390919063ffffffff16565b98506104d660045442610ba390919063ffffffff16565b9750600096505b8b8710156107735760018054889081106104f357fe5b6000918252602080832090910154600160a060020a03168083526002918290526040808420815180830190925291995092909190835b82821015610565578382600202016040805190810160405290816000820154815260200160018201548152505081526020019060010190610529565b50929750879250600191506105779050565b602002015151855151101561058d576001610590565b60005b9350600184900392508460ff8516600281106105a857fe5b6020020151519150878211156106cf57600160a060020a03861660009081526002602081905260409091209060ff85169081106105e157fe5b60020201549050888110156106315760408051600160a060020a038816815290517f71f61642cb57ac11764a2f35fb4edc5361ced458af35bbed8f5ebf708c10e3419181900360200190a16106ca565b8781111561067a5760408051600160a060020a038816815290517f71f61642cb57ac11764a2f35fb4edc5361ced458af35bbed8f5ebf708c10e3419181900360200190a16106ca565b600160a060020a03861660009081526002602081905260409091209060ff85169081106106a357fe5b60020201600101548b8b806001019c508151811015156106bf57fe5b602090810290910101525b610768565b888210156107185760408051600160a060020a038816815290517f71f61642cb57ac11764a2f35fb4edc5361ced458af35bbed8f5ebf708c10e3419181900360200190a1610768565b600160a060020a03861660009081526002602081905260409091209060ff861690811061074157fe5b60020201600101548b8b806001019c5081518110151561075d57fe5b602090810290910101525b6001909601956104dd565b6005548a10156107895760009d508d9c5061079a565b6107938b8b610bba565b60019d509d505b5050505050505050505050509091565b6107b2610a75565b15156107bd57600080fd5b600160a060020a038116600090815260026020526040902054156107e057600080fd5b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038416908117909155600090815260026020526040812090600202015560408051600160a060020a038316815290517fae9c2c6481964847714ce58f65a7f6dcc41d0d8394449bacdf161b5920c4744a9181900360200190a150565b600180548290811061089557fe5b600091825260209091200154600160a060020a0316905081565b6108b7610a75565b15156108c257600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b6000610923610a75565b151561092e57600080fd5b600160a060020a038216600090815260026020526040812061094f91610e07565b5060005b600154811015610a615781600160a060020a031660018281548110151561097657fe5b600091825260209091200154600160a060020a03161415610a59576001805490820114610a04576001805460001981019081106109af57fe5b60009182526020909120015460018054600160a060020a0390921691839081106109d557fe5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b6001805490610a17906000198301610e23565b5060408051600160a060020a038416815290517f1589f8555933761a3cff8aa925061be3b46e2dd43f621322ab611d300f62b1d99181900360200190a1610a61565b600101610953565b5050565b600054600160a060020a03165b90565b600054600160a060020a0316331490565b60055481565b3360008181526002602052604081205411610aa657600080fd5b600160a060020a031660009081526002602081905260409091206001808255910155565b610ad2610a75565b1515610add57600080fd5b600455565b60015490565b60035481565b610af6610a75565b1515610b0157600080fd5b60008111610b0e57600080fd5b600555565b600260205281600052604060002081600281101515610b2e57fe5b600202018054600190910154909250905082565b610b4a610a75565b1515610b5557600080fd5b610b5e81610d41565b50565b610b69610a75565b1515610b7457600080fd5b6312bed400811115610b8557600080fd5b600355565b600082820183811015610b9c57600080fd5b9392505050565b60008083831115610bb357600080fd5b5050900390565b600080600080600085118015610bd1575084865110155b1515610bdc57600080fd5b600192505b84831015610cb4578291505b600082118015610c2d57508582815181101515610c0657fe5b906020019060200201518660018403815181101515610c2157fe5b90602001906020020151115b15610ca9578582815181101515610c4057fe5b9060200190602002015190508560018303815181101515610c5d57fe5b906020019060200201518683815181101515610c7557fe5b602090810290910101528551819087906000198501908110610c9357fe5b6020908102909101015260001990910190610bed565b600190920191610be1565b6002850660011415610ce2578560028604815181101515610cd157fe5b906020019060200201519350610d38565b6002610d2b87600183890403815181101515610cfa57fe5b602090810290910101518860028904815181101515610d1557fe5b602090810290910101519063ffffffff610b8a16565b811515610d3457fe5b0493505b50505092915050565b600160a060020a0381161515610d5657600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60408051808201825290600290829080388339509192915050565b6080604051908101604052806002905b610df1610e4c565b815260200190600190039081610de95790505090565b5060008082556001820181905560028201819055600390910155565b815481835581811115610e4757600083815260209020610e47918101908301610e63565b505050565b604080518082019091526000808252602082015290565b610a7291905b80821115610e7d5760008155600101610e69565b50905600a165627a7a72305820dd6c250b5631475f219871a010e8b6f68d9a2c807d1edadc35a506fb4985eb150029",
  "deployedSourceMap": "419:8125:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1285:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1285:29:7;;;;;;;;;;;;;;;;;;;;3873:708;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3873:708:7;;;;;;;5229:2123;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5229:2123:7;;;;;;;;;;;;;;;;;;;;;;;;;;;7460:271;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7460:271:7;-1:-1:-1;;;;;7460:271:7;;;;;637:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;637:26:7;;;;;;;;;-1:-1:-1;;;;;637:26:7;;;;;;;;;;;;;;1273:127:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1273:127:14;;;;7848:496:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7848:496:7;-1:-1:-1;;;;;7848:496:7;;;;;639:70:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:70:14;;;;926:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:83:14;;;;;;;;;;;;;;;;;;;;;;1426:35:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1426:35:7;;;;4665:273;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4665:273:7;;;;3182:140;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3182:140:7;;;;;8417:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8417:125:7;;;;1144:38;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1144:38:7;;;;3535:188;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3535:188:7;;;;;775:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;775:53:7;-1:-1:-1;;;;;775:53:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:101:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1561:101:14;-1:-1:-1;;;;;1561:101:14;;;;;2741:249:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2741:249:7;;;;;1285:29;;;;:::o;3873:708::-;3933:23;3979:25;4049:28;;:::i;:::-;-1:-1:-1;;3959:10:7;4172:18;4007:32;;;:15;:32;;;;;;;;4049:75;;;;;;;;4081:20;;4049:75;;;4103:10;;;:20;4049:75;;;;;;;3959:10;;-1:-1:-1;4007:32:7;4049:75;4172:18;;;4143:17;-1:-1:-1;4135:26:7;;;;;;4210:13;;;;4193;;:30;;:38;;4230:1;4193:38;;;4226:1;4193:38;4172:59;;4264:12;4260:1;:16;4241:35;;4410:3;4362:44;4391:14;;4362:10;4373:12;4362:24;;;;;;;;;;;;;;;;:44;:28;:44;:::i;:::-;:51;;4354:60;;;;;;4457:3;4425:7;:19;;;;;;;;;;;;;:29;;:35;;;;4500:7;4470;4478:10;4470:19;;;;;;;;;;;;;;:27;;:37;4523:51;;;;;;4570:3;4523:51;;;;;;-1:-1:-1;;;;;4523:51:7;;;;;;;;;;;3873:708;;;;;;:::o;5229:2123::-;5282:7;5291:4;5311:20;5360:29;5429:12;5455:25;5526;5594:9;5646:23;5698:24;;:::i;:::-;5772:18;5859:16;5908:29;6098:27;5334:9;:16;;;;5311:39;;5406:12;5392:27;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;5392:27:7;;5360:59;;5444:1;5429:16;;5484:32;5492:23;;5484:3;:7;;:32;;;;:::i;:::-;5455:61;;5555:23;5563:14;;5555:3;:7;;:23;;;;:::i;:::-;5526:52;;5606:1;5594:13;;5589:1610;5613:12;5609:1;:16;5589:1610;;;5672:9;:12;;5682:1;;5672:12;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5672:12:7;5725:32;;;:15;:32;;;;;;;;5698:59;;;;;;;;5672:12;;-1:-1:-1;5698:59:7;5725:32;;:15;5698:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5698:59:7;;-1:-1:-1;5698:59:7;;-1:-1:-1;5825:1:7;;-1:-1:-1;5817:10:7;;-1:-1:-1;5817:10:7;;;;;;:20;5793:10;;:20;:44;;:52;;5844:1;5793:52;;;5840:1;5793:52;5772:73;-1:-1:-1;5878:1:7;:16;;;;-1:-1:-1;5940:7:7;:21;;;;;;;;;;;;;;:31;;-1:-1:-1;5989:41:7;;;5985:1204;;;-1:-1:-1;;;;;6128:32:7;;;;;;:15;:32;;;;;;;;;:44;;;;;;;;;;;;;:54;;-1:-1:-1;6204:39:7;;;6200:533;;;6319:42;;;-1:-1:-1;;;;;6319:42:7;;;;;;;;;;;;;;;6200:533;;;6412:17;6390:19;:39;6386:347;;;6508:42;;;-1:-1:-1;;;;;6508:42:7;;;;;;;;;;;;;;;6386:347;;;-1:-1:-1;;;;;6662:32:7;;;;;;:15;:32;;;;;;;;;:44;;;;;;;;;;;;;:52;;;6639:12;6652:6;;;;;;6639:20;;;;;;;;;;;;;;;;;;:75;6386:347;5985:1204;;;6851:17;6827:21;:41;6823:352;;;6946:42;;;-1:-1:-1;;;;;6946:42:7;;;;;;;;;;;;;;;6823:352;;;-1:-1:-1;;;;;7102:32:7;;;;;;:15;:32;;;;;;;;;:46;;;;;;;;;;;;;:54;;;7079:12;7092:6;;;;;;7079:20;;;;;;;;;;;;;;;;;;:77;6823:352;5627:3;;;;;5589:1610;;;7220:16;;7213:4;:23;7209:71;;;7260:1;;-1:-1:-1;7260:1:7;;-1:-1:-1;7252:17:7;;7209:71;7298:40;7319:12;7333:4;7298:20;:40::i;:::-;7340:4;7290:55;;;;5229:2123;;;;;;;;;;;;;;;:::o;7460:271::-;824:9:14;:7;:9::i;:::-;816:18;;;;;;;;-1:-1:-1;;;;;7556:25:7;;;;;;:15;:25;;;;;:38;:43;7548:52;;;;;;7610:9;27:10:-1;;23:18;;;45:23;;7610:24:7;;;;-1:-1:-1;;7610:24:7;-1:-1:-1;;;;;7610:24:7;;;;;;;;-1:-1:-1;7644:25:7;;;:15;7610:24;7644:25;;;;;:28;;;:42;7701:23;;;-1:-1:-1;;;;;7701:23:7;;;;;;;;;;;;;;;7460:271;:::o;637:26::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;637:26:7;;-1:-1:-1;637:26:7;:::o;1273:127:14:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1367:1;1351:6;;1330:40;;-1:-1:-1;;;;;1351:6:14;;;;1330:40;;1367:1;;1330:40;1393:1;1376:19;;-1:-1:-1;;1376:19:14;;;1273:127::o;7848:496:7:-;7986:9;824::14;:7;:9::i;:::-;816:18;;;;;;;;-1:-1:-1;;;;;7946:25:7;;;;;;:15;:25;;;;;7939:32;;;:::i;:::-;-1:-1:-1;7998:1:7;7981:357;8005:9;:16;8001:20;;7981:357;;;8062:8;-1:-1:-1;;;;;8046:24:7;:9;8056:1;8046:12;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8046:12:7;:24;8042:286;;;8104:9;:16;;8094:5;;;:26;8090:117;;8159:9;8169:16;;-1:-1:-1;;8169:18:7;;;8159:29;;;;;;;;;;;;;;;;;8144:12;;-1:-1:-1;;;;;8159:29:7;;;;8154:1;;8144:12;;;;;;;;;;;;;;:44;;;;;-1:-1:-1;;;;;8144:44:7;;;;;-1:-1:-1;;;;;8144:44:7;;;;;;8090:117;8224:9;:18;;;;;-1:-1:-1;;8224:18:7;;;:::i;:::-;-1:-1:-1;8265:25:7;;;-1:-1:-1;;;;;8265:25:7;;;;;;;;;;;;;;;8308:5;;8042:286;8023:3;;7981:357;;;7848:496;;:::o;639:70:14:-;676:7;698:6;-1:-1:-1;;;;;698:6:14;639:70;;:::o;926:83::-;965:4;998:6;-1:-1:-1;;;;;998:6:14;984:10;:20;;926:83::o;1426:35:7:-;;;;:::o;4665:273::-;4738:10;4712:23;4767:32;;;:15;:32;;;;;:45;:49;4758:59;;;;;;-1:-1:-1;;;;;4827:32:7;;;;;:15;:32;;;;;;;;4873:1;4827:47;;;4884:35;;:47;4665:273::o;3182:140::-;824:9:14;:7;:9::i;:::-;816:18;;;;;;;;3283:14:7;:32;3182:140::o;8417:125::-;8519:9;:16;8417:125;:::o;1144:38::-;;;;:::o;3535:188::-;824:9:14;:7;:9::i;:::-;816:18;;;;;;;;3668:1:7;3648:21;;3640:30;;;;;;3680:16;:36;3535:188::o;775:53::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;775:53:7;-1:-1:-1;775:53:7;:::o;1561:101:14:-;824:9;:7;:9::i;:::-;816:18;;;;;;;;1629:28;1648:8;1629:18;:28::i;:::-;1561:101;:::o;2741:249:7:-;824:9:14;:7;:9::i;:::-;816:18;;;;;;;;1671:9:7;2868:54;;;2860:63;;;;;;2933:23;:50;2741:249::o;1272:131:13:-;1330:7;1357:5;;;1376:6;;;;1368:15;;;;;;1397:1;1272:131;-1:-1:-1;;;1272:131:13:o;1078:::-;1136:7;;1159:6;;;;1151:15;;;;;;-1:-1:-1;;1184:5:13;;;1078:131::o;468:583:8:-;569:7;648:9;697;768:11;607:1;600:4;:8;:32;;;;;628:4;612:5;:12;:20;;600:32;592:41;;;;;;;;660:1;648:13;;643:245;667:4;663:1;:8;643:245;;;709:1;697:13;;692:186;716:1;712;:5;:31;;;;;735:5;741:1;735:8;;;;;;;;;;;;;;;;;;721:5;729:1;727;:3;721:10;;;;;;;;;;;;;;;;;;:22;712:31;692:186;;;782:5;788:1;782:8;;;;;;;;;;;;;;;;;;768:22;;819:5;827:1;825;:3;819:10;;;;;;;;;;;;;;;;;;808:5;814:1;808:8;;;;;;;;;;;;;;;;;;:21;847:10;;860:3;;847:5;;-1:-1:-1;;853:3:8;;;847:10;;;;;;;;;;;;;;:16;-1:-1:-1;;745:3:8;;;;692:186;;;673:3;;;;;643:245;;;908:1;901:4;:8;913:1;901:13;897:148;;;937:5;950:1;943:4;:8;937:15;;;;;;;;;;;;;;;;;;930:22;;;;897:148;1033:1;990:40;1010:5;1027:1;1033;1016:4;:8;:12;1010:19;;;;;;;;;;;;;;;;;;;990:5;1003:1;996:4;:8;990:15;;;;;;;;;;;;;;;;;;;;:40;:19;:40;:::i;:::-;:44;;;;;;;;983:51;;897:148;468:583;;;;;;;:::o;1796:169:14:-;-1:-1:-1;;;;;1865:22:14;;;;1857:31;;;;;;1920:6;;;1899:38;;-1:-1:-1;;;;;1899:38:14;;;;1920:6;;;1899:38;;;1943:6;:17;;-1:-1:-1;;1943:17:14;-1:-1:-1;;;;;1943:17:14;;;;;;;;;;1796:169::o;419:8125:7:-;;;;;;;;;;;;;;;105:10:-1;419:8125:7;88:34:-1;-1:-1;419:8125:7;;;-1:-1:-1;;419:8125:7:o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;419:8125:7;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;419:8125:7;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;",
  "language": "Solidity",
  "natspec": {
    "methods": {
      "addProvider(address)": {
        "notice": "Authorizes a provider.",
        "params": {
          "provider": "Address of the provider."
        }
      },
      "getData()": {
        "notice": "Computes median of provider reports whose timestamps are in the        valid timestamp range.",
        "return": "AggregatedValue: Median of providers reported values.        valid: Boolean indicating an aggregated value was computed successfully."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "providersSize()": {
        "return": "The number of authorized providers."
      },
      "purgeReports()": {
        "notice": "Invalidates the reports of the calling provider."
      },
      "pushReport(uint256)": {
        "notice": "Pushes a report for the calling provider.",
        "params": {
          "payload": "is expected to be 18 decimal fixed point number."
        }
      },
      "removeProvider(address)": {
        "notice": "Revokes provider authorization.",
        "params": {
          "provider": "Address of the provider."
        }
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract.",
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setMinimumProviders(uint256)": {
        "notice": "Sets the minimum number of providers with valid reports to        consider the aggregate report valid.",
        "params": {
          "minimumProviders_": "The new minimum number of providers."
        }
      },
      "setReportDelaySec(uint256)": {
        "notice": "Sets the time period since reporting that has to pass before a        report is usable.",
        "params": {
          "reportDelaySec_": "The new delay period in seconds."
        }
      },
      "setReportExpirationTimeSec(uint256)": {
        "notice": "Sets the report expiration period.",
        "params": {
          "reportExpirationTimeSec_": "The number of seconds after which the       report is deemed expired."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Median Oracle"
  },
  "offset": [
    419,
    8544
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFB JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x12E800F1 DUP2 EQ PUSH2 0x100 JUMPI DUP1 PUSH4 0x1E20D14B EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x3BC5DE30 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x46E2577A EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0x50F3FC81 EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x8A355A57 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0xB577C0C7 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xD13D5971 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xDA6B0EEA EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xDCBB8253 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0xDF982985 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xEF35BCCE EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xF10864B6 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0xF68BE513 EQ PUSH2 0x31A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x332 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 CALLDATALOAD PUSH2 0x338 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH2 0x454 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x7AA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH1 0x4 CALLDATALOAD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0x8AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x919 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0xA65 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0xA86 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH2 0xA8C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 CALLDATALOAD PUSH2 0xACA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0xAE2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0xAE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 CALLDATALOAD PUSH2 0xAEE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0xB42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13F PUSH1 0x4 CALLDATALOAD PUSH2 0xB61 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x343 PUSH2 0xDBE JUMP JUMPDEST POP POP CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP1 DUP4 MSTORE SWAP4 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 SWAP5 POP SWAP3 SWAP2 SWAP1 DUP2 SWAP1 DUP2 LT PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD DUP4 MLOAD LT ISZERO PUSH2 0x396 JUMPI PUSH1 0x1 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP2 POP DUP2 PUSH1 0x1 SUB SWAP1 POP TIMESTAMP PUSH2 0x3CA PUSH1 0x4 SLOAD DUP6 DUP6 PUSH1 0xFF AND PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x3B9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB8A AND JUMP JUMPDEST GT ISZERO PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP5 PUSH1 0xFF DUP4 AND PUSH1 0x2 DUP2 LT PUSH2 0x3E5 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 DUP3 PUSH1 0xFF AND PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0x402 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND SWAP3 PUSH32 0x460FCC5A1888965D48C2CAB000FE20DA51B1297D995AF79A1924E2312D0D82B3 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x46B PUSH2 0xDD9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP12 POP DUP12 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4A3 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP11 POP PUSH1 0x0 SWAP10 POP PUSH2 0x4BF PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0xBA3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP9 POP PUSH2 0x4D6 PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0xBA3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 POP PUSH1 0x0 SWAP7 POP JUMPDEST DUP12 DUP8 LT ISZERO PUSH2 0x773 JUMPI PUSH1 0x1 DUP1 SLOAD DUP9 SWAP1 DUP2 LT PUSH2 0x4F3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP1 DUP4 MSTORE PUSH1 0x2 SWAP2 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP10 POP SWAP3 SWAP1 SWAP2 SWAP1 DUP4 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x565 JUMPI DUP4 DUP3 PUSH1 0x2 MUL ADD PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x529 JUMP JUMPDEST POP SWAP3 SWAP8 POP DUP8 SWAP3 POP PUSH1 0x1 SWAP2 POP PUSH2 0x577 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 MUL ADD MLOAD MLOAD DUP6 MLOAD MLOAD LT ISZERO PUSH2 0x58D JUMPI PUSH1 0x1 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x0 JUMPDEST SWAP4 POP PUSH1 0x1 DUP5 SWAP1 SUB SWAP3 POP DUP5 PUSH1 0xFF DUP6 AND PUSH1 0x2 DUP2 LT PUSH2 0x5A8 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD MLOAD SWAP2 POP DUP8 DUP3 GT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x5E1 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD SLOAD SWAP1 POP DUP9 DUP2 LT ISZERO PUSH2 0x631 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x71F61642CB57AC11764A2F35FB4EDC5361CED458AF35BBED8F5EBF708C10E341 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH2 0x6CA JUMP JUMPDEST DUP8 DUP2 GT ISZERO PUSH2 0x67A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x71F61642CB57AC11764A2F35FB4EDC5361CED458AF35BBED8F5EBF708C10E341 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH1 0xFF DUP6 AND SWAP1 DUP2 LT PUSH2 0x6A3 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP12 DUP12 DUP1 PUSH1 0x1 ADD SWAP13 POP DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x6BF JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MSTORE JUMPDEST PUSH2 0x768 JUMP JUMPDEST DUP9 DUP3 LT ISZERO PUSH2 0x718 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x71F61642CB57AC11764A2F35FB4EDC5361CED458AF35BBED8F5EBF708C10E341 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH2 0x768 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SWAP1 PUSH1 0xFF DUP7 AND SWAP1 DUP2 LT PUSH2 0x741 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP12 DUP12 DUP1 PUSH1 0x1 ADD SWAP13 POP DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0x75D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MSTORE JUMPDEST PUSH1 0x1 SWAP1 SWAP7 ADD SWAP6 PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x5 SLOAD DUP11 LT ISZERO PUSH2 0x789 JUMPI PUSH1 0x0 SWAP14 POP DUP14 SWAP13 POP PUSH2 0x79A JUMP JUMPDEST PUSH2 0x793 DUP12 DUP12 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x1 SWAP14 POP SWAP14 POP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x7B2 PUSH2 0xA75 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x7BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP1 DUP3 ADD DUP3 SSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 ADD DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0xAE9C2C6481964847714CE58F65A7F6DCC41D0D8394449BACDF161B5920C4744A SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD DUP3 SWAP1 DUP2 LT PUSH2 0x895 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0xA75 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x923 PUSH2 0xA75 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x92E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x94F SWAP2 PUSH2 0xE07 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x1 SLOAD DUP2 LT ISZERO PUSH2 0xA61 JUMPI DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x976 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND EQ ISZERO PUSH2 0xA59 JUMPI PUSH1 0x1 DUP1 SLOAD SWAP1 DUP3 ADD EQ PUSH2 0xA04 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 LT PUSH2 0x9AF JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP1 SWAP3 AND SWAP2 DUP4 SWAP1 DUP2 LT PUSH2 0x9D5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND MUL OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0xA17 SWAP1 PUSH1 0x0 NOT DUP4 ADD PUSH2 0xE23 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x1589F8555933761A3CFF8AA925061BE3B46E2DD43F621322AB611D300F62B1D9 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 PUSH2 0xA61 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x953 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND CALLER EQ SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD GT PUSH2 0xAA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 DUP1 DUP3 SSTORE SWAP2 ADD SSTORE JUMP JUMPDEST PUSH2 0xAD2 PUSH2 0xA75 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xADD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xAF6 PUSH2 0xA75 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xB01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xB0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH1 0x2 DUP2 LT ISZERO ISZERO PUSH2 0xB2E JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP1 SWAP3 POP SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0xB4A PUSH2 0xA75 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xB55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5E DUP2 PUSH2 0xD41 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xB69 PUSH2 0xA75 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xB74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x12BED400 DUP2 GT ISZERO PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 GT ISZERO PUSH2 0xBB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0xBD1 JUMPI POP DUP5 DUP7 MLOAD LT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0xBDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SWAP3 POP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0xCB4 JUMPI DUP3 SWAP2 POP JUMPDEST PUSH1 0x0 DUP3 GT DUP1 ISZERO PUSH2 0xC2D JUMPI POP DUP6 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xC06 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP7 PUSH1 0x1 DUP5 SUB DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xC21 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD GT JUMPDEST ISZERO PUSH2 0xCA9 JUMPI DUP6 DUP3 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xC40 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD SWAP1 POP DUP6 PUSH1 0x1 DUP4 SUB DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xC5D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD DUP7 DUP4 DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xC75 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MSTORE DUP6 MLOAD DUP2 SWAP1 DUP8 SWAP1 PUSH1 0x0 NOT DUP6 ADD SWAP1 DUP2 LT PUSH2 0xC93 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x0 NOT SWAP1 SWAP2 ADD SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 PUSH2 0xBE1 JUMP JUMPDEST PUSH1 0x2 DUP6 MOD PUSH1 0x1 EQ ISZERO PUSH2 0xCE2 JUMPI DUP6 PUSH1 0x2 DUP7 DIV DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xCD1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL ADD MLOAD SWAP4 POP PUSH2 0xD38 JUMP JUMPDEST PUSH1 0x2 PUSH2 0xD2B DUP8 PUSH1 0x1 DUP4 DUP10 DIV SUB DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xCFA JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MLOAD DUP9 PUSH1 0x2 DUP10 DIV DUP2 MLOAD DUP2 LT ISZERO ISZERO PUSH2 0xD15 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP1 SWAP2 ADD ADD MLOAD SWAP1 PUSH4 0xFFFFFFFF PUSH2 0xB8A AND JUMP JUMPDEST DUP2 ISZERO ISZERO PUSH2 0xD34 JUMPI INVALID JUMPDEST DIV SWAP4 POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP2 AND ISZERO ISZERO PUSH2 0xD56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE SWAP1 PUSH1 0x2 SWAP1 DUP3 SWAP1 DUP1 CODESIZE DUP4 CODECOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 JUMPDEST PUSH2 0xDF1 PUSH2 0xE4C JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xDE9 JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP3 SSTORE PUSH1 0x1 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SSTORE JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0xE47 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH2 0xE47 SWAP2 DUP2 ADD SWAP1 DUP4 ADD PUSH2 0xE63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xA72 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xE7D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xE69 JUMP JUMPDEST POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xdd PUSH13 0x250B5631475F219871A010E8B6 0xf6 DUP14 SWAP11 0x2c DUP1 PUSH30 0x1EDADC35A506FB4985EB1500290000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "LT",
      "path": "7"
    },
    "9": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFB"
    },
    "12": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "13": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "18": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH29",
      "path": "7",
      "value": "0x100000000000000000000000000000000000000000000000000000000"
    },
    "48": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "50": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "51": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DIV",
      "path": "7"
    },
    "52": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "AND",
      "path": "7"
    },
    "53": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x12E800F1"
    },
    "58": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "59": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "60": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "63": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "64": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1E20D14B"
    },
    "70": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "71": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x127"
    },
    "74": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "75": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x3BC5DE30"
    },
    "81": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "82": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x141"
    },
    "85": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "86": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x46E2577A"
    },
    "92": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "93": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16F"
    },
    "96": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "97": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x50F3FC81"
    },
    "103": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "104": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x190"
    },
    "107": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "108": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "109": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "114": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C4"
    },
    "118": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "119": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "120": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8A355A57"
    },
    "125": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D9"
    },
    "129": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "130": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "131": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "136": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FA"
    },
    "140": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "141": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "142": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8F32D59B"
    },
    "147": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20F"
    },
    "151": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "152": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "153": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xB577C0C7"
    },
    "158": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "159": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x238"
    },
    "162": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "163": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xD13D5971"
    },
    "169": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "170": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x24D"
    },
    "173": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDA6B0EEA"
    },
    "180": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x262"
    },
    "184": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDCBB8253"
    },
    "191": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27A"
    },
    "195": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDF982985"
    },
    "202": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28F"
    },
    "206": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "208": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xEF35BCCE"
    },
    "213": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "214": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A4"
    },
    "217": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "218": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "219": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF10864B6"
    },
    "224": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "225": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2BC"
    },
    "228": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "229": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "230": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "235": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "236": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2F9"
    },
    "239": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "240": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "241": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF68BE513"
    },
    "246": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "EQ",
      "path": "7"
    },
    "247": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x31A"
    },
    "250": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "251": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "252": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "254": {
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "255": {
      "first_revert": true,
      "fn": null,
      "offset": [
        419,
        8544
      ],
      "op": "REVERT",
      "path": "7"
    },
    "256": {
      "offset": [
        1285,
        1314
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "257": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "258": {
      "op": "DUP1"
    },
    "259": {
      "op": "ISZERO"
    },
    "260": {
      "op": "PUSH2",
      "value": "0x10C"
    },
    "263": {
      "op": "JUMPI"
    },
    "264": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "266": {
      "op": "DUP1"
    },
    "267": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "REVERT",
      "path": "7"
    },
    "268": {
      "op": "JUMPDEST"
    },
    "269": {
      "offset": [
        1285,
        1314
      ],
      "op": "POP",
      "path": "7"
    },
    "270": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x115"
    },
    "273": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x332"
    },
    "276": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "JUMP",
      "path": "7"
    },
    "277": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "278": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "280": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "DUP1",
      "path": "7"
    },
    "281": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "282": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "283": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "DUP3",
      "path": "7"
    },
    "284": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "285": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "286": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "287": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "DUP2",
      "path": "7"
    },
    "288": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "289": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "SUB",
      "path": "7"
    },
    "290": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "292": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "ADD",
      "path": "7"
    },
    "293": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "294": {
      "fn": null,
      "offset": [
        1285,
        1314
      ],
      "op": "RETURN",
      "path": "7"
    },
    "295": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "296": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "297": {
      "op": "DUP1"
    },
    "298": {
      "op": "ISZERO"
    },
    "299": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "302": {
      "op": "JUMPI"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "305": {
      "op": "DUP1"
    },
    "306": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "REVERT",
      "path": "7"
    },
    "307": {
      "op": "JUMPDEST"
    },
    "308": {
      "op": "POP"
    },
    "309": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F"
    },
    "312": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "314": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "315": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x338"
    },
    "318": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "JUMP",
      "path": "7"
    },
    "319": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "320": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "STOP",
      "path": "7"
    },
    "321": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "322": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "323": {
      "op": "DUP1"
    },
    "324": {
      "op": "ISZERO"
    },
    "325": {
      "op": "PUSH2",
      "value": "0x14D"
    },
    "328": {
      "op": "JUMPI"
    },
    "329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "331": {
      "op": "DUP1"
    },
    "332": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "REVERT",
      "path": "7"
    },
    "333": {
      "op": "JUMPDEST"
    },
    "334": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "335": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x156"
    },
    "338": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x454"
    },
    "341": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "JUMP",
      "path": "7"
    },
    "342": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "343": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "345": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "DUP1",
      "path": "7"
    },
    "346": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "347": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "348": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "DUP4",
      "path": "7"
    },
    "349": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "350": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "351": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "352": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "353": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "355": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "DUP4",
      "path": "7"
    },
    "356": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "ADD",
      "path": "7"
    },
    "357": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "358": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "DUP1",
      "path": "7"
    },
    "359": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "360": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "361": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "DUP3",
      "path": "7"
    },
    "362": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "363": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "SUB",
      "path": "7"
    },
    "364": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "ADD",
      "path": "7"
    },
    "365": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "366": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "RETURN",
      "path": "7"
    },
    "367": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "368": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "369": {
      "op": "DUP1"
    },
    "370": {
      "op": "ISZERO"
    },
    "371": {
      "op": "PUSH2",
      "value": "0x17B"
    },
    "374": {
      "op": "JUMPI"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "377": {
      "op": "DUP1"
    },
    "378": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "REVERT",
      "path": "7"
    },
    "379": {
      "op": "JUMPDEST"
    },
    "380": {
      "op": "POP"
    },
    "381": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "390": {
      "op": "EXP"
    },
    "391": {
      "op": "SUB"
    },
    "392": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "394": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "395": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "AND",
      "path": "7"
    },
    "396": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7AA"
    },
    "399": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "JUMP",
      "path": "7"
    },
    "400": {
      "offset": [
        637,
        663
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "401": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "402": {
      "op": "DUP1"
    },
    "403": {
      "op": "ISZERO"
    },
    "404": {
      "op": "PUSH2",
      "value": "0x19C"
    },
    "407": {
      "op": "JUMPI"
    },
    "408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "410": {
      "op": "DUP1"
    },
    "411": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "REVERT",
      "path": "7"
    },
    "412": {
      "op": "JUMPDEST"
    },
    "413": {
      "op": "POP"
    },
    "414": {
      "offset": [
        637,
        663
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A8"
    },
    "417": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "419": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "420": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x887"
    },
    "423": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "JUMP",
      "path": "7"
    },
    "424": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "425": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "427": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "DUP1",
      "path": "7"
    },
    "428": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "435": {
      "op": "EXP"
    },
    "436": {
      "op": "SUB"
    },
    "437": {
      "offset": [
        637,
        663
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "438": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "439": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "AND",
      "path": "7"
    },
    "440": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "DUP3",
      "path": "7"
    },
    "441": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "442": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "443": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "444": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "DUP2",
      "path": "7"
    },
    "445": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "446": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SUB",
      "path": "7"
    },
    "447": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "449": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "ADD",
      "path": "7"
    },
    "450": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "451": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "RETURN",
      "path": "7"
    },
    "452": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1400
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "453": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1400
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "454": {
      "op": "DUP1"
    },
    "455": {
      "op": "ISZERO"
    },
    "456": {
      "op": "PUSH2",
      "value": "0x1D0"
    },
    "459": {
      "op": "JUMPI"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "462": {
      "op": "DUP1"
    },
    "463": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1400
      ],
      "op": "REVERT",
      "path": "14"
    },
    "464": {
      "op": "JUMPDEST"
    },
    "465": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1400
      ],
      "op": "POP",
      "path": "14"
    },
    "466": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1400
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13F"
    },
    "469": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1400
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8AF"
    },
    "472": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1400
      ],
      "op": "JUMP",
      "path": "14"
    },
    "473": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "474": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "475": {
      "op": "DUP1"
    },
    "476": {
      "op": "ISZERO"
    },
    "477": {
      "op": "PUSH2",
      "value": "0x1E5"
    },
    "480": {
      "op": "JUMPI"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "483": {
      "op": "DUP1"
    },
    "484": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "REVERT",
      "path": "7"
    },
    "485": {
      "op": "JUMPDEST"
    },
    "486": {
      "op": "POP"
    },
    "487": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "496": {
      "op": "EXP"
    },
    "497": {
      "op": "SUB"
    },
    "498": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "500": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "501": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "AND",
      "path": "7"
    },
    "502": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x919"
    },
    "505": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "JUMP",
      "path": "7"
    },
    "506": {
      "fn": "Ownable.owner",
      "offset": [
        639,
        709
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "507": {
      "fn": "Ownable.owner",
      "offset": [
        639,
        709
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "508": {
      "op": "DUP1"
    },
    "509": {
      "op": "ISZERO"
    },
    "510": {
      "op": "PUSH2",
      "value": "0x206"
    },
    "513": {
      "op": "JUMPI"
    },
    "514": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "516": {
      "op": "DUP1"
    },
    "517": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.owner",
      "offset": [
        639,
        709
      ],
      "op": "REVERT",
      "path": "14"
    },
    "518": {
      "op": "JUMPDEST"
    },
    "519": {
      "fn": "Ownable.owner",
      "offset": [
        639,
        709
      ],
      "op": "POP",
      "path": "14"
    },
    "520": {
      "fn": "Ownable.owner",
      "offset": [
        639,
        709
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A8"
    },
    "523": {
      "fn": "Ownable.owner",
      "offset": [
        639,
        709
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA65"
    },
    "526": {
      "fn": "Ownable.owner",
      "offset": [
        639,
        709
      ],
      "op": "JUMP",
      "path": "14"
    },
    "527": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "528": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "529": {
      "op": "DUP1"
    },
    "530": {
      "op": "ISZERO"
    },
    "531": {
      "op": "PUSH2",
      "value": "0x21B"
    },
    "534": {
      "op": "JUMPI"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "537": {
      "op": "DUP1"
    },
    "538": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "REVERT",
      "path": "14"
    },
    "539": {
      "op": "JUMPDEST"
    },
    "540": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "POP",
      "path": "14"
    },
    "541": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x224"
    },
    "544": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA75"
    },
    "547": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "JUMP",
      "path": "14"
    },
    "548": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "549": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "551": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "DUP1",
      "path": "14"
    },
    "552": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "553": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "554": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "555": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "556": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "DUP3",
      "path": "14"
    },
    "557": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "558": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "559": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "560": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "DUP2",
      "path": "14"
    },
    "561": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "562": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "SUB",
      "path": "14"
    },
    "563": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "565": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "ADD",
      "path": "14"
    },
    "566": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "567": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "RETURN",
      "path": "14"
    },
    "568": {
      "offset": [
        1426,
        1461
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "569": {
      "fn": "Ownable.isOwner",
      "offset": [
        1426,
        1461
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "570": {
      "op": "DUP1"
    },
    "571": {
      "op": "ISZERO"
    },
    "572": {
      "op": "PUSH2",
      "value": "0x244"
    },
    "575": {
      "op": "JUMPI"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "578": {
      "op": "DUP1"
    },
    "579": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.isOwner",
      "offset": [
        1426,
        1461
      ],
      "op": "REVERT",
      "path": "7"
    },
    "580": {
      "op": "JUMPDEST"
    },
    "581": {
      "offset": [
        1426,
        1461
      ],
      "op": "POP",
      "path": "7"
    },
    "582": {
      "fn": "Ownable.isOwner",
      "offset": [
        1426,
        1461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x115"
    },
    "585": {
      "fn": "Ownable.isOwner",
      "offset": [
        1426,
        1461
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA86"
    },
    "588": {
      "fn": "Ownable.isOwner",
      "offset": [
        1426,
        1461
      ],
      "op": "JUMP",
      "path": "7"
    },
    "589": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4665,
        4938
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "590": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4665,
        4938
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "591": {
      "op": "DUP1"
    },
    "592": {
      "op": "ISZERO"
    },
    "593": {
      "op": "PUSH2",
      "value": "0x259"
    },
    "596": {
      "op": "JUMPI"
    },
    "597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "599": {
      "op": "DUP1"
    },
    "600": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4665,
        4938
      ],
      "op": "REVERT",
      "path": "7"
    },
    "601": {
      "op": "JUMPDEST"
    },
    "602": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4665,
        4938
      ],
      "op": "POP",
      "path": "7"
    },
    "603": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4665,
        4938
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F"
    },
    "606": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4665,
        4938
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA8C"
    },
    "609": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4665,
        4938
      ],
      "op": "JUMP",
      "path": "7"
    },
    "610": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3182,
        3322
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "611": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3182,
        3322
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "612": {
      "op": "DUP1"
    },
    "613": {
      "op": "ISZERO"
    },
    "614": {
      "op": "PUSH2",
      "value": "0x26E"
    },
    "617": {
      "op": "JUMPI"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "620": {
      "op": "DUP1"
    },
    "621": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3182,
        3322
      ],
      "op": "REVERT",
      "path": "7"
    },
    "622": {
      "op": "JUMPDEST"
    },
    "623": {
      "op": "POP"
    },
    "624": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3182,
        3322
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F"
    },
    "627": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3182,
        3322
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "629": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3182,
        3322
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "630": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3182,
        3322
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xACA"
    },
    "633": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3182,
        3322
      ],
      "op": "JUMP",
      "path": "7"
    },
    "634": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        8417,
        8542
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "635": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        8417,
        8542
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "636": {
      "op": "DUP1"
    },
    "637": {
      "op": "ISZERO"
    },
    "638": {
      "op": "PUSH2",
      "value": "0x286"
    },
    "641": {
      "op": "JUMPI"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "644": {
      "op": "DUP1"
    },
    "645": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.providersSize",
      "offset": [
        8417,
        8542
      ],
      "op": "REVERT",
      "path": "7"
    },
    "646": {
      "op": "JUMPDEST"
    },
    "647": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        8417,
        8542
      ],
      "op": "POP",
      "path": "7"
    },
    "648": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        8417,
        8542
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x115"
    },
    "651": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        8417,
        8542
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAE2"
    },
    "654": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        8417,
        8542
      ],
      "op": "JUMP",
      "path": "7"
    },
    "655": {
      "offset": [
        1144,
        1182
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "656": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        1144,
        1182
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "657": {
      "op": "DUP1"
    },
    "658": {
      "op": "ISZERO"
    },
    "659": {
      "op": "PUSH2",
      "value": "0x29B"
    },
    "662": {
      "op": "JUMPI"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "665": {
      "op": "DUP1"
    },
    "666": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.providersSize",
      "offset": [
        1144,
        1182
      ],
      "op": "REVERT",
      "path": "7"
    },
    "667": {
      "op": "JUMPDEST"
    },
    "668": {
      "offset": [
        1144,
        1182
      ],
      "op": "POP",
      "path": "7"
    },
    "669": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        1144,
        1182
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x115"
    },
    "672": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        1144,
        1182
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAE8"
    },
    "675": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        1144,
        1182
      ],
      "op": "JUMP",
      "path": "7"
    },
    "676": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3535,
        3723
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "677": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3535,
        3723
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "678": {
      "op": "DUP1"
    },
    "679": {
      "op": "ISZERO"
    },
    "680": {
      "op": "PUSH2",
      "value": "0x2B0"
    },
    "683": {
      "op": "JUMPI"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "686": {
      "op": "DUP1"
    },
    "687": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3535,
        3723
      ],
      "op": "REVERT",
      "path": "7"
    },
    "688": {
      "op": "JUMPDEST"
    },
    "689": {
      "op": "POP"
    },
    "690": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3535,
        3723
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F"
    },
    "693": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3535,
        3723
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "695": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3535,
        3723
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "696": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3535,
        3723
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAEE"
    },
    "699": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3535,
        3723
      ],
      "op": "JUMP",
      "path": "7"
    },
    "700": {
      "offset": [
        775,
        828
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "701": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "702": {
      "op": "DUP1"
    },
    "703": {
      "op": "ISZERO"
    },
    "704": {
      "op": "PUSH2",
      "value": "0x2C8"
    },
    "707": {
      "op": "JUMPI"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "710": {
      "op": "DUP1"
    },
    "711": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "REVERT",
      "path": "7"
    },
    "712": {
      "op": "JUMPDEST"
    },
    "713": {
      "op": "POP"
    },
    "714": {
      "offset": [
        775,
        828
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E0"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "719": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "721": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "723": {
      "op": "EXP"
    },
    "724": {
      "op": "SUB"
    },
    "725": {
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "727": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "728": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "AND",
      "path": "7"
    },
    "729": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x24"
    },
    "731": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "732": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB13"
    },
    "735": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "JUMP",
      "path": "7"
    },
    "736": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "737": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "739": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "DUP1",
      "path": "7"
    },
    "740": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "741": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "742": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "DUP4",
      "path": "7"
    },
    "743": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "744": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "746": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "DUP4",
      "path": "7"
    },
    "747": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "ADD",
      "path": "7"
    },
    "748": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "749": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "750": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "751": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "752": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "DUP1",
      "path": "7"
    },
    "753": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "754": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "755": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "DUP3",
      "path": "7"
    },
    "756": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "757": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SUB",
      "path": "7"
    },
    "758": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "ADD",
      "path": "7"
    },
    "759": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "760": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "RETURN",
      "path": "7"
    },
    "761": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "762": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "763": {
      "op": "DUP1"
    },
    "764": {
      "op": "ISZERO"
    },
    "765": {
      "op": "PUSH2",
      "value": "0x305"
    },
    "768": {
      "op": "JUMPI"
    },
    "769": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "771": {
      "op": "DUP1"
    },
    "772": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "REVERT",
      "path": "14"
    },
    "773": {
      "op": "JUMPDEST"
    },
    "774": {
      "op": "POP"
    },
    "775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x13F"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "782": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "784": {
      "op": "EXP"
    },
    "785": {
      "op": "SUB"
    },
    "786": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "788": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "CALLDATALOAD",
      "path": "14"
    },
    "789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "AND",
      "path": "14"
    },
    "790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB42"
    },
    "793": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "JUMP",
      "path": "14"
    },
    "794": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2741,
        2990
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "795": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2741,
        2990
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "796": {
      "op": "DUP1"
    },
    "797": {
      "op": "ISZERO"
    },
    "798": {
      "op": "PUSH2",
      "value": "0x326"
    },
    "801": {
      "op": "JUMPI"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "804": {
      "op": "DUP1"
    },
    "805": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2741,
        2990
      ],
      "op": "REVERT",
      "path": "7"
    },
    "806": {
      "op": "JUMPDEST"
    },
    "807": {
      "op": "POP"
    },
    "808": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2741,
        2990
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F"
    },
    "811": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2741,
        2990
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "813": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2741,
        2990
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "814": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2741,
        2990
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB61"
    },
    "817": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2741,
        2990
      ],
      "op": "JUMP",
      "path": "7"
    },
    "818": {
      "offset": [
        1285,
        1314
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "819": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        1285,
        1314
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "821": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        1285,
        1314
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "822": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        1285,
        1314
      ],
      "op": "DUP2",
      "path": "7"
    },
    "823": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "jump": "o",
      "offset": [
        1285,
        1314
      ],
      "op": "JUMP",
      "path": "7"
    },
    "824": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "825": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3933,
        3956
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "827": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3979,
        4004
      ],
      "op": "DUP1",
      "path": "7"
    },
    "828": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x343"
    },
    "831": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4077
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDBE"
    },
    "834": {
      "fn": "MedianOracle.pushReport",
      "jump": "i",
      "offset": [
        4049,
        4077
      ],
      "op": "JUMP",
      "path": "7"
    },
    "835": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4077
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "836": {
      "op": "POP"
    },
    "837": {
      "op": "POP"
    },
    "838": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3959,
        3969
      ],
      "op": "CALLER",
      "path": "7"
    },
    "839": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4172,
        4190
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "841": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "DUP2",
      "path": "7"
    },
    "842": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "DUP2",
      "path": "7"
    },
    "843": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "844": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4022
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "846": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "848": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "DUP2",
      "path": "7"
    },
    "849": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "DUP2",
      "path": "7"
    },
    "850": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "851": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "853": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "DUP1",
      "path": "7"
    },
    "854": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "DUP5",
      "path": "7"
    },
    "855": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "856": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "DUP2",
      "path": "7"
    },
    "857": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "858": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "DUP1",
      "path": "7"
    },
    "859": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "DUP4",
      "path": "7"
    },
    "860": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "ADD",
      "path": "7"
    },
    "861": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "862": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "863": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "864": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4081,
        4101
      ],
      "op": "DUP1",
      "path": "7"
    },
    "865": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4081,
        4101
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "866": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "DUP1",
      "path": "7"
    },
    "867": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "DUP4",
      "path": "7"
    },
    "868": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "869": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4103,
        4113
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "870": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4103,
        4113
      ],
      "op": "DUP2",
      "path": "7"
    },
    "871": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4103,
        4113
      ],
      "op": "ADD",
      "path": "7"
    },
    "872": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4103,
        4123
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "873": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "874": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "DUP3",
      "path": "7"
    },
    "875": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "ADD",
      "path": "7"
    },
    "876": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "877": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "878": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "879": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "880": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3959,
        3969
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "881": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3959,
        3969
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "882": {
      "op": "POP"
    },
    "883": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4007,
        4039
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "884": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4049,
        4124
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "885": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4172,
        4190
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "886": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4172,
        4190
      ],
      "op": "DUP2",
      "path": "7"
    },
    "887": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4172,
        4190
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "888": {
      "branch": 50,
      "fn": "MedianOracle.pushReport",
      "offset": [
        4143,
        4160
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 0
    },
    "889": {
      "op": "LT"
    },
    "890": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4135,
        4161
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "893": {
      "branch": 50,
      "fn": "MedianOracle.pushReport",
      "offset": [
        4135,
        4161
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "894": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4135,
        4161
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "896": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4135,
        4161
      ],
      "op": "DUP1",
      "path": "7"
    },
    "897": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4135,
        4161
      ],
      "op": "REVERT",
      "path": "7"
    },
    "898": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4135,
        4161
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "899": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4210,
        4223
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "901": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4210,
        4223
      ],
      "op": "DUP4",
      "path": "7"
    },
    "902": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4210,
        4223
      ],
      "op": "ADD",
      "path": "7"
    },
    "903": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4210,
        4223
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "904": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4193,
        4206
      ],
      "op": "DUP4",
      "path": "7"
    },
    "905": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4193,
        4206
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "906": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4193,
        4223
      ],
      "op": "LT",
      "path": "7"
    },
    "907": {
      "branch": 51,
      "fn": "MedianOracle.pushReport",
      "offset": [
        4193,
        4223
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "908": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4193,
        4231
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x396"
    },
    "911": {
      "branch": 51,
      "fn": "MedianOracle.pushReport",
      "offset": [
        4193,
        4231
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "912": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4230,
        4231
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "914": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4193,
        4231
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x399"
    },
    "917": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4193,
        4231
      ],
      "op": "JUMP",
      "path": "7"
    },
    "918": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4193,
        4231
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "919": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4226,
        4227
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "921": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4193,
        4231
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "922": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4172,
        4231
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "923": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4172,
        4231
      ],
      "op": "POP",
      "path": "7"
    },
    "924": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4264,
        4276
      ],
      "op": "DUP2",
      "path": "7"
    },
    "925": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4260,
        4261
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "927": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4260,
        4276
      ],
      "op": "SUB",
      "path": "7"
    },
    "928": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4241,
        4276
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "929": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4241,
        4276
      ],
      "op": "POP",
      "path": "7"
    },
    "930": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4410,
        4413
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 1
    },
    "931": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4406
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3CA"
    },
    "934": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4391,
        4405
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "936": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4391,
        4405
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "937": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4372
      ],
      "op": "DUP6",
      "path": "7"
    },
    "938": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4373,
        4385
      ],
      "op": "DUP6",
      "path": "7"
    },
    "939": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "941": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "AND",
      "path": "7"
    },
    "942": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "944": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "DUP2",
      "path": "7"
    },
    "945": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "LT",
      "path": "7"
    },
    "946": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "947": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "948": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B9"
    },
    "951": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "952": {
      "dev": "Index out of range",
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "INVALID",
      "path": "7"
    },
    "953": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "954": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "956": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "MUL",
      "path": "7"
    },
    "957": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "ADD",
      "path": "7"
    },
    "958": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "959": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4386
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "960": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4406
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "965": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4390
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB8A"
    },
    "968": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4406
      ],
      "op": "AND",
      "path": "7"
    },
    "969": {
      "fn": "MedianOracle.pushReport",
      "jump": "i",
      "offset": [
        4362,
        4406
      ],
      "op": "JUMP",
      "path": "7"
    },
    "970": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4406
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "971": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4413
      ],
      "op": "GT",
      "path": "7"
    },
    "972": {
      "branch": 52,
      "fn": "MedianOracle.pushReport",
      "offset": [
        4362,
        4413
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "973": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4354,
        4414
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D5"
    },
    "976": {
      "branch": 52,
      "fn": "MedianOracle.pushReport",
      "offset": [
        4354,
        4414
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "977": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4354,
        4414
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "979": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4354,
        4414
      ],
      "op": "DUP1",
      "path": "7"
    },
    "980": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4354,
        4414
      ],
      "op": "REVERT",
      "path": "7"
    },
    "981": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4354,
        4414
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "982": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4457,
        4460
      ],
      "op": "TIMESTAMP",
      "path": "7",
      "statement": 2
    },
    "983": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4432
      ],
      "op": "DUP5",
      "path": "7"
    },
    "984": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "986": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "DUP4",
      "path": "7"
    },
    "987": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "AND",
      "path": "7"
    },
    "988": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "990": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "DUP2",
      "path": "7"
    },
    "991": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "LT",
      "path": "7"
    },
    "992": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E5"
    },
    "995": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "996": {
      "dev": "Index out of range",
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "INVALID",
      "path": "7"
    },
    "997": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "998": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1000": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "MUL",
      "path": "7"
    },
    "1001": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4444
      ],
      "op": "ADD",
      "path": "7"
    },
    "1002": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4454
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1004": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4454
      ],
      "op": "ADD",
      "path": "7"
    },
    "1005": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4460
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1006": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4460
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1007": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4460
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1008": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4425,
        4460
      ],
      "op": "POP",
      "path": "7"
    },
    "1009": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4500,
        4507
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 3
    },
    "1010": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4477
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1011": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4478,
        4488
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1012": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1014": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "AND",
      "path": "7"
    },
    "1015": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1017": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1018": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "LT",
      "path": "7"
    },
    "1019": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1020": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1021": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x402"
    },
    "1024": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1025": {
      "dev": "Index out of range",
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "INVALID",
      "path": "7"
    },
    "1026": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1027": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1029": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "MUL",
      "path": "7"
    },
    "1030": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4489
      ],
      "op": "ADD",
      "path": "7"
    },
    "1031": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4497
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1033": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4497
      ],
      "op": "ADD",
      "path": "7"
    },
    "1034": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4470,
        4507
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "1035": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x40"
    },
    "1037": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1038": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1039": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1040": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1041": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1042": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4570,
        4573
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "1043": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1045": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1046": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "ADD",
      "path": "7"
    },
    "1047": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1048": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1049": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1056": {
      "op": "EXP"
    },
    "1057": {
      "op": "SUB"
    },
    "1058": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1059": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "AND",
      "path": "7"
    },
    "1060": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1061": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x460FCC5A1888965D48C2CAB000FE20DA51B1297D995AF79A1924E2312D0D82B3"
    },
    "1094": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1095": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1096": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1097": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "SUB",
      "path": "7"
    },
    "1098": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "ADD",
      "path": "7"
    },
    "1099": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1100": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        4523,
        4574
      ],
      "op": "LOG2",
      "path": "7"
    },
    "1101": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "POP",
      "path": "7"
    },
    "1102": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "POP",
      "path": "7"
    },
    "1103": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "POP",
      "path": "7"
    },
    "1104": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "POP",
      "path": "7"
    },
    "1105": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "POP",
      "path": "7"
    },
    "1106": {
      "fn": "MedianOracle.pushReport",
      "offset": [
        3873,
        4581
      ],
      "op": "POP",
      "path": "7"
    },
    "1107": {
      "fn": "MedianOracle.pushReport",
      "jump": "o",
      "offset": [
        3873,
        4581
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1108": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1109": {
      "fn": "MedianOracle.getData",
      "offset": [
        5282,
        5289
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1111": {
      "fn": "MedianOracle.getData",
      "offset": [
        5291,
        5295
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1112": {
      "fn": "MedianOracle.getData",
      "offset": [
        5311,
        5331
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1114": {
      "fn": "MedianOracle.getData",
      "offset": [
        5360,
        5389
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1116": {
      "fn": "MedianOracle.getData",
      "offset": [
        5429,
        5441
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1118": {
      "fn": "MedianOracle.getData",
      "offset": [
        5455,
        5480
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1119": {
      "fn": "MedianOracle.getData",
      "offset": [
        5526,
        5551
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1121": {
      "fn": "MedianOracle.getData",
      "offset": [
        5594,
        5603
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1122": {
      "fn": "MedianOracle.getData",
      "offset": [
        5646,
        5669
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1124": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5722
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x46B"
    },
    "1127": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5722
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDD9"
    },
    "1130": {
      "fn": "MedianOracle.getData",
      "jump": "i",
      "offset": [
        5698,
        5722
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1131": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5722
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1132": {
      "fn": "MedianOracle.getData",
      "offset": [
        5772,
        5790
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1134": {
      "fn": "MedianOracle.getData",
      "offset": [
        5859,
        5875
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1135": {
      "fn": "MedianOracle.getData",
      "offset": [
        5908,
        5937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1137": {
      "fn": "MedianOracle.getData",
      "offset": [
        6098,
        6125
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1138": {
      "fn": "MedianOracle.getData",
      "offset": [
        5334,
        5343
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1140": {
      "fn": "MedianOracle.getData",
      "offset": [
        5334,
        5350
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1141": {
      "fn": "MedianOracle.getData",
      "offset": [
        5334,
        5350
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1142": {
      "fn": "MedianOracle.getData",
      "offset": [
        5334,
        5350
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1143": {
      "fn": "MedianOracle.getData",
      "offset": [
        5334,
        5350
      ],
      "op": "POP",
      "path": "7"
    },
    "1144": {
      "fn": "MedianOracle.getData",
      "offset": [
        5311,
        5350
      ],
      "op": "SWAP12",
      "path": "7"
    },
    "1145": {
      "fn": "MedianOracle.getData",
      "offset": [
        5311,
        5350
      ],
      "op": "POP",
      "path": "7"
    },
    "1146": {
      "fn": "MedianOracle.getData",
      "offset": [
        5406,
        5418
      ],
      "op": "DUP12",
      "path": "7"
    },
    "1147": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1149": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1150": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1151": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1152": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1153": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1154": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1155": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1157": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "MUL",
      "path": "7"
    },
    "1158": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1160": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "ADD",
      "path": "7"
    },
    "1161": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1162": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "ADD",
      "path": "7"
    },
    "1163": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1165": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1166": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1167": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1168": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4A3"
    },
    "1171": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1172": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1173": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1175": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "ADD",
      "path": "7"
    },
    "1176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1178": {
      "op": "DUP3"
    },
    "1179": {
      "op": "MUL"
    },
    "1180": {
      "op": "DUP1"
    },
    "1181": {
      "op": "CODESIZE"
    },
    "1182": {
      "op": "DUP4"
    },
    "1183": {
      "op": "CODECOPY"
    },
    "1184": {
      "op": "ADD"
    },
    "1185": {
      "op": "SWAP1"
    },
    "1186": {
      "op": "POP"
    },
    "1187": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1188": {
      "fn": "MedianOracle.getData",
      "offset": [
        5392,
        5419
      ],
      "op": "POP",
      "path": "7"
    },
    "1189": {
      "fn": "MedianOracle.getData",
      "offset": [
        5360,
        5419
      ],
      "op": "SWAP11",
      "path": "7"
    },
    "1190": {
      "fn": "MedianOracle.getData",
      "offset": [
        5360,
        5419
      ],
      "op": "POP",
      "path": "7"
    },
    "1191": {
      "fn": "MedianOracle.getData",
      "offset": [
        5444,
        5445
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1193": {
      "fn": "MedianOracle.getData",
      "offset": [
        5429,
        5445
      ],
      "op": "SWAP10",
      "path": "7"
    },
    "1194": {
      "fn": "MedianOracle.getData",
      "offset": [
        5429,
        5445
      ],
      "op": "POP",
      "path": "7"
    },
    "1195": {
      "fn": "MedianOracle.getData",
      "offset": [
        5484,
        5516
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4BF"
    },
    "1198": {
      "fn": "MedianOracle.getData",
      "offset": [
        5492,
        5515
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "1200": {
      "fn": "MedianOracle.getData",
      "offset": [
        5492,
        5515
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1201": {
      "fn": "MedianOracle.getData",
      "offset": [
        5484,
        5487
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "1202": {
      "fn": "MedianOracle.getData",
      "offset": [
        5484,
        5491
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBA3"
    },
    "1205": {
      "fn": "MedianOracle.getData",
      "offset": [
        5484,
        5491
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1206": {
      "fn": "MedianOracle.getData",
      "offset": [
        5484,
        5516
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1207": {
      "fn": "MedianOracle.getData",
      "offset": [
        5484,
        5516
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1208": {
      "fn": "MedianOracle.getData",
      "offset": [
        5484,
        5516
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "1213": {
      "fn": "MedianOracle.getData",
      "offset": [
        5484,
        5516
      ],
      "op": "AND",
      "path": "7"
    },
    "1214": {
      "fn": "MedianOracle.getData",
      "jump": "i",
      "offset": [
        5484,
        5516
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1215": {
      "fn": "MedianOracle.getData",
      "offset": [
        5484,
        5516
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1216": {
      "fn": "MedianOracle.getData",
      "offset": [
        5455,
        5516
      ],
      "op": "SWAP9",
      "path": "7"
    },
    "1217": {
      "fn": "MedianOracle.getData",
      "offset": [
        5455,
        5516
      ],
      "op": "POP",
      "path": "7"
    },
    "1218": {
      "fn": "MedianOracle.getData",
      "offset": [
        5555,
        5578
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4D6"
    },
    "1221": {
      "fn": "MedianOracle.getData",
      "offset": [
        5563,
        5577
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1223": {
      "fn": "MedianOracle.getData",
      "offset": [
        5563,
        5577
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1224": {
      "fn": "MedianOracle.getData",
      "offset": [
        5555,
        5558
      ],
      "op": "TIMESTAMP",
      "path": "7"
    },
    "1225": {
      "fn": "MedianOracle.getData",
      "offset": [
        5555,
        5562
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBA3"
    },
    "1228": {
      "fn": "MedianOracle.getData",
      "offset": [
        5555,
        5562
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1229": {
      "fn": "MedianOracle.getData",
      "offset": [
        5555,
        5578
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1230": {
      "fn": "MedianOracle.getData",
      "offset": [
        5555,
        5578
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1231": {
      "fn": "MedianOracle.getData",
      "offset": [
        5555,
        5578
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFFFFFFFF"
    },
    "1236": {
      "fn": "MedianOracle.getData",
      "offset": [
        5555,
        5578
      ],
      "op": "AND",
      "path": "7"
    },
    "1237": {
      "fn": "MedianOracle.getData",
      "jump": "i",
      "offset": [
        5555,
        5578
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1238": {
      "fn": "MedianOracle.getData",
      "offset": [
        5555,
        5578
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1239": {
      "fn": "MedianOracle.getData",
      "offset": [
        5526,
        5578
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "1240": {
      "fn": "MedianOracle.getData",
      "offset": [
        5526,
        5578
      ],
      "op": "POP",
      "path": "7"
    },
    "1241": {
      "fn": "MedianOracle.getData",
      "offset": [
        5606,
        5607
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1243": {
      "fn": "MedianOracle.getData",
      "offset": [
        5594,
        5607
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "1244": {
      "fn": "MedianOracle.getData",
      "offset": [
        5594,
        5607
      ],
      "op": "POP",
      "path": "7"
    },
    "1245": {
      "fn": "MedianOracle.getData",
      "offset": [
        5589,
        7199
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1246": {
      "fn": "MedianOracle.getData",
      "offset": [
        5613,
        5625
      ],
      "op": "DUP12",
      "path": "7"
    },
    "1247": {
      "fn": "MedianOracle.getData",
      "offset": [
        5609,
        5610
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1248": {
      "fn": "MedianOracle.getData",
      "offset": [
        5609,
        5625
      ],
      "op": "LT",
      "path": "7"
    },
    "1249": {
      "fn": "MedianOracle.getData",
      "offset": [
        5589,
        7199
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1250": {
      "fn": "MedianOracle.getData",
      "offset": [
        5589,
        7199
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x773"
    },
    "1253": {
      "fn": "MedianOracle.getData",
      "offset": [
        5589,
        7199
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1254": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5681
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1256": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1257": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1258": {
      "fn": "MedianOracle.getData",
      "offset": [
        5682,
        5683
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1259": {
      "fn": "MedianOracle.getData",
      "offset": [
        5682,
        5683
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1260": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1261": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "LT",
      "path": "7"
    },
    "1262": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4F3"
    },
    "1265": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1266": {
      "dev": "Index out of range",
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "INVALID",
      "path": "7"
    },
    "1267": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1268": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1270": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1271": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1272": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1273": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1275": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1276": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1277": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1278": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1279": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1280": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "ADD",
      "path": "7"
    },
    "1281": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1282": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1284": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1288": {
      "op": "EXP"
    },
    "1289": {
      "op": "SUB"
    },
    "1290": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "AND",
      "path": "7"
    },
    "1291": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1292": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1293": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1294": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5740
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1296": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1297": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1298": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1299": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1300": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1302": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1303": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1304": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1305": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1306": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1307": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1308": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1309": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "ADD",
      "path": "7"
    },
    "1310": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1311": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1312": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1313": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1314": {
      "fn": "MedianOracle.getData",
      "offset": [
        5672,
        5684
      ],
      "op": "SWAP10",
      "path": "7"
    },
    "1315": {
      "op": "POP"
    },
    "1316": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1317": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1318": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5757
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1319": {
      "fn": "MedianOracle.getData",
      "offset": [
        5725,
        5740
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1320": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1321": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1322": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1323": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1324": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "LT",
      "path": "7"
    },
    "1325": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1326": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x565"
    },
    "1329": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1330": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1331": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1332": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1334": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "MUL",
      "path": "7"
    },
    "1335": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "ADD",
      "path": "7"
    },
    "1336": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1338": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1339": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1340": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1341": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1342": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "ADD",
      "path": "7"
    },
    "1343": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1345": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1346": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1347": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1348": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1350": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1351": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "ADD",
      "path": "7"
    },
    "1352": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1353": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1354": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1355": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1357": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "ADD",
      "path": "7"
    },
    "1358": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1360": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1361": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "ADD",
      "path": "7"
    },
    "1362": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1363": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1364": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1365": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "POP",
      "path": "7"
    },
    "1366": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "POP",
      "path": "7"
    },
    "1367": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1368": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1369": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1371": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "ADD",
      "path": "7"
    },
    "1372": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1373": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1375": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "ADD",
      "path": "7"
    },
    "1376": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1377": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x529"
    },
    "1380": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1381": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1382": {
      "op": "POP"
    },
    "1383": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1384": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SWAP8",
      "path": "7"
    },
    "1385": {
      "op": "POP"
    },
    "1386": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1387": {
      "fn": "MedianOracle.getData",
      "offset": [
        5698,
        5757
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1388": {
      "op": "POP"
    },
    "1389": {
      "fn": "MedianOracle.getData",
      "offset": [
        5825,
        5826
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1391": {
      "fn": "MedianOracle.getData",
      "offset": [
        5825,
        5826
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1392": {
      "op": "POP"
    },
    "1393": {
      "fn": "MedianOracle.getData",
      "offset": [
        5817,
        5827
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x577"
    },
    "1396": {
      "fn": "MedianOracle.getData",
      "offset": [
        5817,
        5827
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1397": {
      "op": "POP"
    },
    "1398": {
      "fn": "MedianOracle.getData",
      "offset": [
        5817,
        5827
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1399": {
      "fn": "MedianOracle.getData",
      "offset": [
        5817,
        5827
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1400": {
      "fn": "MedianOracle.getData",
      "offset": [
        5817,
        5827
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1402": {
      "fn": "MedianOracle.getData",
      "offset": [
        5817,
        5827
      ],
      "op": "MUL",
      "path": "7"
    },
    "1403": {
      "fn": "MedianOracle.getData",
      "offset": [
        5817,
        5827
      ],
      "op": "ADD",
      "path": "7"
    },
    "1404": {
      "fn": "MedianOracle.getData",
      "offset": [
        5817,
        5827
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1405": {
      "fn": "MedianOracle.getData",
      "offset": [
        5817,
        5837
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1406": {
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5803
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1407": {
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5803
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1408": {
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5813
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1409": {
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5837
      ],
      "op": "LT",
      "path": "7"
    },
    "1410": {
      "branch": 53,
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5837
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1411": {
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5845
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x58D"
    },
    "1414": {
      "branch": 53,
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5845
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1415": {
      "fn": "MedianOracle.getData",
      "offset": [
        5844,
        5845
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1417": {
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5845
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x590"
    },
    "1420": {
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5845
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1421": {
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5845
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1422": {
      "fn": "MedianOracle.getData",
      "offset": [
        5840,
        5841
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1424": {
      "fn": "MedianOracle.getData",
      "offset": [
        5793,
        5845
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1425": {
      "fn": "MedianOracle.getData",
      "offset": [
        5772,
        5845
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "1426": {
      "op": "POP"
    },
    "1427": {
      "fn": "MedianOracle.getData",
      "offset": [
        5878,
        5879
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1429": {
      "fn": "MedianOracle.getData",
      "offset": [
        5878,
        5894
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1430": {
      "fn": "MedianOracle.getData",
      "offset": [
        5878,
        5894
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1431": {
      "fn": "MedianOracle.getData",
      "offset": [
        5878,
        5894
      ],
      "op": "SUB",
      "path": "7"
    },
    "1432": {
      "fn": "MedianOracle.getData",
      "offset": [
        5878,
        5894
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1433": {
      "op": "POP"
    },
    "1434": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5947
      ],
      "op": "DUP5",
      "path": "7"
    },
    "1435": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1437": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1438": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "AND",
      "path": "7"
    },
    "1439": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1441": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1442": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "LT",
      "path": "7"
    },
    "1443": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5A8"
    },
    "1446": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1447": {
      "dev": "Index out of range",
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "INVALID",
      "path": "7"
    },
    "1448": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1449": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1451": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "MUL",
      "path": "7"
    },
    "1452": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "ADD",
      "path": "7"
    },
    "1453": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5961
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1454": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5971
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1455": {
      "fn": "MedianOracle.getData",
      "offset": [
        5940,
        5971
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1456": {
      "op": "POP"
    },
    "1457": {
      "fn": "MedianOracle.getData",
      "offset": [
        5989,
        6030
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1458": {
      "fn": "MedianOracle.getData",
      "offset": [
        5989,
        6030
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1459": {
      "branch": 54,
      "fn": "MedianOracle.getData",
      "offset": [
        5989,
        6030
      ],
      "op": "GT",
      "path": "7"
    },
    "1460": {
      "fn": "MedianOracle.getData",
      "offset": [
        5985,
        7189
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1461": {
      "fn": "MedianOracle.getData",
      "offset": [
        5985,
        7189
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6CF"
    },
    "1464": {
      "branch": 54,
      "fn": "MedianOracle.getData",
      "offset": [
        5985,
        7189
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1471": {
      "op": "EXP"
    },
    "1472": {
      "op": "SUB"
    },
    "1473": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1474": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "AND",
      "path": "7"
    },
    "1475": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1477": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1478": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1479": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1480": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6143
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1482": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1484": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1485": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1486": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1487": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1489": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1490": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1491": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1492": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6160
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1493": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1495": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1496": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "AND",
      "path": "7"
    },
    "1497": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1498": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1499": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "LT",
      "path": "7"
    },
    "1500": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5E1"
    },
    "1503": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1504": {
      "dev": "Index out of range",
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "INVALID",
      "path": "7"
    },
    "1505": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1506": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1508": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "MUL",
      "path": "7"
    },
    "1509": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6172
      ],
      "op": "ADD",
      "path": "7"
    },
    "1510": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6182
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1511": {
      "fn": "MedianOracle.getData",
      "offset": [
        6128,
        6182
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "fn": "MedianOracle.getData",
      "offset": [
        6204,
        6243
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1514": {
      "fn": "MedianOracle.getData",
      "offset": [
        6204,
        6243
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1515": {
      "branch": 55,
      "fn": "MedianOracle.getData",
      "offset": [
        6204,
        6243
      ],
      "op": "LT",
      "path": "7"
    },
    "1516": {
      "fn": "MedianOracle.getData",
      "offset": [
        6200,
        6733
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1517": {
      "fn": "MedianOracle.getData",
      "offset": [
        6200,
        6733
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x631"
    },
    "1520": {
      "branch": 55,
      "fn": "MedianOracle.getData",
      "offset": [
        6200,
        6733
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1521": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x40"
    },
    "1523": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1524": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1531": {
      "op": "EXP"
    },
    "1532": {
      "op": "SUB"
    },
    "1533": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1534": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "AND",
      "path": "7"
    },
    "1535": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1536": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1537": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1538": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1539": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x71F61642CB57AC11764A2F35FB4EDC5361CED458AF35BBED8F5EBF708C10E341"
    },
    "1572": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1573": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1574": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1575": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "SUB",
      "path": "7"
    },
    "1576": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1578": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "ADD",
      "path": "7"
    },
    "1579": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1580": {
      "fn": "MedianOracle.getData",
      "offset": [
        6319,
        6361
      ],
      "op": "LOG1",
      "path": "7"
    },
    "1581": {
      "fn": "MedianOracle.getData",
      "offset": [
        6200,
        6733
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6CA"
    },
    "1584": {
      "fn": "MedianOracle.getData",
      "offset": [
        6200,
        6733
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1585": {
      "fn": "MedianOracle.getData",
      "offset": [
        6200,
        6733
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1586": {
      "fn": "MedianOracle.getData",
      "offset": [
        6412,
        6429
      ],
      "op": "DUP8",
      "path": "7"
    },
    "1587": {
      "fn": "MedianOracle.getData",
      "offset": [
        6390,
        6409
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1588": {
      "branch": 56,
      "fn": "MedianOracle.getData",
      "offset": [
        6390,
        6429
      ],
      "op": "GT",
      "path": "7"
    },
    "1589": {
      "fn": "MedianOracle.getData",
      "offset": [
        6386,
        6733
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1590": {
      "fn": "MedianOracle.getData",
      "offset": [
        6386,
        6733
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x67A"
    },
    "1593": {
      "branch": 56,
      "fn": "MedianOracle.getData",
      "offset": [
        6386,
        6733
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1594": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 6,
      "value": "0x40"
    },
    "1596": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1597": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1600": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1602": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1604": {
      "op": "EXP"
    },
    "1605": {
      "op": "SUB"
    },
    "1606": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1607": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "AND",
      "path": "7"
    },
    "1608": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1609": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1610": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1611": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1612": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x71F61642CB57AC11764A2F35FB4EDC5361CED458AF35BBED8F5EBF708C10E341"
    },
    "1645": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1646": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1647": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1648": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "SUB",
      "path": "7"
    },
    "1649": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1651": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "ADD",
      "path": "7"
    },
    "1652": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1653": {
      "fn": "MedianOracle.getData",
      "offset": [
        6508,
        6550
      ],
      "op": "LOG1",
      "path": "7"
    },
    "1654": {
      "fn": "MedianOracle.getData",
      "offset": [
        6386,
        6733
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6CA"
    },
    "1657": {
      "fn": "MedianOracle.getData",
      "offset": [
        6386,
        6733
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1658": {
      "fn": "MedianOracle.getData",
      "offset": [
        6386,
        6733
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1663": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1665": {
      "op": "EXP"
    },
    "1666": {
      "op": "SUB"
    },
    "1667": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "DUP7",
      "path": "7",
      "statement": 7
    },
    "1668": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "AND",
      "path": "7"
    },
    "1669": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1671": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1672": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1673": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1674": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6677
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1676": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1678": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1679": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1680": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1681": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1683": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1684": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1685": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1686": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6694
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1687": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1689": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "DUP6",
      "path": "7"
    },
    "1690": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "AND",
      "path": "7"
    },
    "1691": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1692": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1693": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "LT",
      "path": "7"
    },
    "1694": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6A3"
    },
    "1697": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1698": {
      "dev": "Index out of range",
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "INVALID",
      "path": "7"
    },
    "1699": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1700": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1702": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "MUL",
      "path": "7"
    },
    "1703": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6706
      ],
      "op": "ADD",
      "path": "7"
    },
    "1704": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6714
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1706": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6714
      ],
      "op": "ADD",
      "path": "7"
    },
    "1707": {
      "fn": "MedianOracle.getData",
      "offset": [
        6662,
        6714
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1708": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6651
      ],
      "op": "DUP12",
      "path": "7"
    },
    "1709": {
      "fn": "MedianOracle.getData",
      "offset": [
        6652,
        6658
      ],
      "op": "DUP12",
      "path": "7"
    },
    "1710": {
      "fn": "MedianOracle.getData",
      "offset": [
        6652,
        6658
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1711": {
      "fn": "MedianOracle.getData",
      "offset": [
        6652,
        6658
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1713": {
      "fn": "MedianOracle.getData",
      "offset": [
        6652,
        6658
      ],
      "op": "ADD",
      "path": "7"
    },
    "1714": {
      "fn": "MedianOracle.getData",
      "offset": [
        6652,
        6658
      ],
      "op": "SWAP13",
      "path": "7"
    },
    "1715": {
      "fn": "MedianOracle.getData",
      "offset": [
        6652,
        6658
      ],
      "op": "POP",
      "path": "7"
    },
    "1716": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1717": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1718": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1719": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "LT",
      "path": "7"
    },
    "1720": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1721": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1722": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6BF"
    },
    "1725": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1726": {
      "dev": "Index out of range",
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "INVALID",
      "path": "7"
    },
    "1727": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1728": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1730": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1731": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1732": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "MUL",
      "path": "7"
    },
    "1733": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1734": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1735": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "ADD",
      "path": "7"
    },
    "1736": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6659
      ],
      "op": "ADD",
      "path": "7"
    },
    "1737": {
      "fn": "MedianOracle.getData",
      "offset": [
        6639,
        6714
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1738": {
      "fn": "MedianOracle.getData",
      "offset": [
        6386,
        6733
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1739": {
      "fn": "MedianOracle.getData",
      "offset": [
        5985,
        7189
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x768"
    },
    "1742": {
      "fn": "MedianOracle.getData",
      "offset": [
        5985,
        7189
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1743": {
      "fn": "MedianOracle.getData",
      "offset": [
        5985,
        7189
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1744": {
      "fn": "MedianOracle.getData",
      "offset": [
        6851,
        6868
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1745": {
      "fn": "MedianOracle.getData",
      "offset": [
        6827,
        6848
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1746": {
      "branch": 57,
      "fn": "MedianOracle.getData",
      "offset": [
        6827,
        6868
      ],
      "op": "LT",
      "path": "7"
    },
    "1747": {
      "fn": "MedianOracle.getData",
      "offset": [
        6823,
        7175
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1748": {
      "fn": "MedianOracle.getData",
      "offset": [
        6823,
        7175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x718"
    },
    "1751": {
      "branch": 57,
      "fn": "MedianOracle.getData",
      "offset": [
        6823,
        7175
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1752": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 8,
      "value": "0x40"
    },
    "1754": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1755": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1762": {
      "op": "EXP"
    },
    "1763": {
      "op": "SUB"
    },
    "1764": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "DUP9",
      "path": "7"
    },
    "1765": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "AND",
      "path": "7"
    },
    "1766": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1767": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1768": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1769": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1770": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x71F61642CB57AC11764A2F35FB4EDC5361CED458AF35BBED8F5EBF708C10E341"
    },
    "1803": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1804": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1805": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1806": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "SUB",
      "path": "7"
    },
    "1807": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1809": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "ADD",
      "path": "7"
    },
    "1810": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1811": {
      "fn": "MedianOracle.getData",
      "offset": [
        6946,
        6988
      ],
      "op": "LOG1",
      "path": "7"
    },
    "1812": {
      "fn": "MedianOracle.getData",
      "offset": [
        6823,
        7175
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x768"
    },
    "1815": {
      "fn": "MedianOracle.getData",
      "offset": [
        6823,
        7175
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1816": {
      "fn": "MedianOracle.getData",
      "offset": [
        6823,
        7175
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1823": {
      "op": "EXP"
    },
    "1824": {
      "op": "SUB"
    },
    "1825": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "DUP7",
      "path": "7",
      "statement": 9
    },
    "1826": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "AND",
      "path": "7"
    },
    "1827": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1829": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1830": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1831": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1832": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7117
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1834": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1836": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1837": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1838": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1839": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1841": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1842": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1843": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1844": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7134
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1845": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xFF"
    },
    "1847": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "DUP7",
      "path": "7"
    },
    "1848": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "AND",
      "path": "7"
    },
    "1849": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1850": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1851": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "LT",
      "path": "7"
    },
    "1852": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x741"
    },
    "1855": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1856": {
      "dev": "Index out of range",
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "INVALID",
      "path": "7"
    },
    "1857": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1858": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1860": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "MUL",
      "path": "7"
    },
    "1861": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7148
      ],
      "op": "ADD",
      "path": "7"
    },
    "1862": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7156
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1864": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7156
      ],
      "op": "ADD",
      "path": "7"
    },
    "1865": {
      "fn": "MedianOracle.getData",
      "offset": [
        7102,
        7156
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1866": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7091
      ],
      "op": "DUP12",
      "path": "7"
    },
    "1867": {
      "fn": "MedianOracle.getData",
      "offset": [
        7092,
        7098
      ],
      "op": "DUP12",
      "path": "7"
    },
    "1868": {
      "fn": "MedianOracle.getData",
      "offset": [
        7092,
        7098
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1869": {
      "fn": "MedianOracle.getData",
      "offset": [
        7092,
        7098
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1871": {
      "fn": "MedianOracle.getData",
      "offset": [
        7092,
        7098
      ],
      "op": "ADD",
      "path": "7"
    },
    "1872": {
      "fn": "MedianOracle.getData",
      "offset": [
        7092,
        7098
      ],
      "op": "SWAP13",
      "path": "7"
    },
    "1873": {
      "fn": "MedianOracle.getData",
      "offset": [
        7092,
        7098
      ],
      "op": "POP",
      "path": "7"
    },
    "1874": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1875": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1876": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1877": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "LT",
      "path": "7"
    },
    "1878": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1879": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1880": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x75D"
    },
    "1883": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1884": {
      "dev": "Index out of range",
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "INVALID",
      "path": "7"
    },
    "1885": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1886": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1888": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1889": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1890": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "MUL",
      "path": "7"
    },
    "1891": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1892": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1893": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "ADD",
      "path": "7"
    },
    "1894": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7099
      ],
      "op": "ADD",
      "path": "7"
    },
    "1895": {
      "fn": "MedianOracle.getData",
      "offset": [
        7079,
        7156
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1896": {
      "fn": "MedianOracle.getData",
      "offset": [
        6823,
        7175
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1897": {
      "fn": "MedianOracle.getData",
      "offset": [
        5627,
        5630
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 10,
      "value": "0x1"
    },
    "1899": {
      "fn": "MedianOracle.getData",
      "offset": [
        5627,
        5630
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1900": {
      "fn": "MedianOracle.getData",
      "offset": [
        5627,
        5630
      ],
      "op": "SWAP7",
      "path": "7"
    },
    "1901": {
      "fn": "MedianOracle.getData",
      "offset": [
        5627,
        5630
      ],
      "op": "ADD",
      "path": "7"
    },
    "1902": {
      "fn": "MedianOracle.getData",
      "offset": [
        5627,
        5630
      ],
      "op": "SWAP6",
      "path": "7"
    },
    "1903": {
      "fn": "MedianOracle.getData",
      "offset": [
        5589,
        7199
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4DD"
    },
    "1906": {
      "fn": "MedianOracle.getData",
      "offset": [
        5589,
        7199
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1907": {
      "fn": "MedianOracle.getData",
      "offset": [
        5589,
        7199
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1908": {
      "fn": "MedianOracle.getData",
      "offset": [
        7220,
        7236
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "1910": {
      "fn": "MedianOracle.getData",
      "offset": [
        7220,
        7236
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1911": {
      "fn": "MedianOracle.getData",
      "offset": [
        7213,
        7217
      ],
      "op": "DUP11",
      "path": "7"
    },
    "1912": {
      "branch": 58,
      "fn": "MedianOracle.getData",
      "offset": [
        7213,
        7236
      ],
      "op": "LT",
      "path": "7"
    },
    "1913": {
      "fn": "MedianOracle.getData",
      "offset": [
        7209,
        7280
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1914": {
      "fn": "MedianOracle.getData",
      "offset": [
        7209,
        7280
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x789"
    },
    "1917": {
      "branch": 58,
      "fn": "MedianOracle.getData",
      "offset": [
        7209,
        7280
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1918": {
      "fn": "MedianOracle.getData",
      "offset": [
        7260,
        7261
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x0"
    },
    "1920": {
      "fn": "MedianOracle.getData",
      "offset": [
        7260,
        7261
      ],
      "op": "SWAP14",
      "path": "7"
    },
    "1921": {
      "op": "POP"
    },
    "1922": {
      "fn": "MedianOracle.getData",
      "offset": [
        7260,
        7261
      ],
      "op": "DUP14",
      "path": "7"
    },
    "1923": {
      "fn": "MedianOracle.getData",
      "offset": [
        7260,
        7261
      ],
      "op": "SWAP13",
      "path": "7"
    },
    "1924": {
      "op": "POP"
    },
    "1925": {
      "fn": "MedianOracle.getData",
      "offset": [
        7252,
        7269
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x79A"
    },
    "1928": {
      "fn": "MedianOracle.getData",
      "offset": [
        7252,
        7269
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1929": {
      "fn": "MedianOracle.getData",
      "offset": [
        7209,
        7280
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1930": {
      "fn": "MedianOracle.getData",
      "offset": [
        7298,
        7338
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 12,
      "value": "0x793"
    },
    "1933": {
      "fn": "MedianOracle.getData",
      "offset": [
        7319,
        7331
      ],
      "op": "DUP12",
      "path": "7"
    },
    "1934": {
      "fn": "MedianOracle.getData",
      "offset": [
        7333,
        7337
      ],
      "op": "DUP12",
      "path": "7"
    },
    "1935": {
      "fn": "MedianOracle.getData",
      "offset": [
        7298,
        7318
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBBA"
    },
    "1938": {
      "fn": "MedianOracle.getData",
      "jump": "i",
      "offset": [
        7298,
        7338
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1939": {
      "fn": "MedianOracle.getData",
      "offset": [
        7298,
        7338
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1940": {
      "fn": "MedianOracle.getData",
      "offset": [
        7340,
        7344
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "1942": {
      "fn": "MedianOracle.getData",
      "offset": [
        7290,
        7345
      ],
      "op": "SWAP14",
      "path": "7"
    },
    "1943": {
      "fn": "MedianOracle.getData",
      "offset": [
        7290,
        7345
      ],
      "op": "POP",
      "path": "7"
    },
    "1944": {
      "fn": "MedianOracle.getData",
      "offset": [
        7290,
        7345
      ],
      "op": "SWAP14",
      "path": "7"
    },
    "1945": {
      "fn": "MedianOracle.getData",
      "offset": [
        7290,
        7345
      ],
      "op": "POP",
      "path": "7"
    },
    "1946": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1947": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1948": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1949": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1950": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1951": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1952": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1953": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1954": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1955": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1956": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1957": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1958": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "POP",
      "path": "7"
    },
    "1959": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1960": {
      "fn": "MedianOracle.getData",
      "offset": [
        5229,
        7352
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1961": {
      "fn": "MedianOracle.getData",
      "jump": "o",
      "offset": [
        5229,
        7352
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1962": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1963": {
      "offset": [
        824,
        833
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7B2"
    },
    "1966": {
      "offset": [
        824,
        831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA75"
    },
    "1969": {
      "jump": "i",
      "offset": [
        824,
        833
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1970": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        824,
        833
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1971": {
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1972": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1973": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        816,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x7BD"
    },
    "1976": {
      "offset": [
        816,
        834
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1977": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        816,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1979": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        816,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1980": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        816,
        834
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1981": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        816,
        834
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1984": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1988": {
      "op": "EXP"
    },
    "1989": {
      "op": "SUB"
    },
    "1990": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 13
    },
    "1991": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "AND",
      "path": "7"
    },
    "1992": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1994": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1995": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1996": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1997": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7571
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1999": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2001": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2002": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2004": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2005": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7581
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2006": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7594
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2007": {
      "branch": 59,
      "fn": "MedianOracle.addProvider",
      "offset": [
        7556,
        7599
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2008": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7548,
        7600
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7E0"
    },
    "2011": {
      "branch": 59,
      "fn": "MedianOracle.addProvider",
      "offset": [
        7548,
        7600
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2012": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7548,
        7600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2014": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7548,
        7600
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2015": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7548,
        7600
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2016": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7548,
        7600
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2017": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7619
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 14,
      "value": "0x1"
    },
    "2019": {
      "op": "DUP1"
    },
    "2020": {
      "op": "SLOAD"
    },
    "2021": {
      "op": "DUP1"
    },
    "2022": {
      "op": "DUP3"
    },
    "2023": {
      "op": "ADD"
    },
    "2024": {
      "op": "DUP3"
    },
    "2025": {
      "op": "SSTORE"
    },
    "2026": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6"
    },
    "2059": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "ADD",
      "path": "7"
    },
    "2060": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2061": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2062": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2083": {
      "op": "NOT"
    },
    "2084": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "AND",
      "path": "7"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2091": {
      "op": "EXP"
    },
    "2092": {
      "op": "SUB"
    },
    "2093": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2094": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "AND",
      "path": "7"
    },
    "2095": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2096": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2097": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "OR",
      "path": "7"
    },
    "2098": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2099": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2100": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2101": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2103": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7669
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 15
    },
    "2104": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7669
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2105": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7669
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2106": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7659
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2108": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7610,
        7634
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2110": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7669
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2111": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7669
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2113": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7669
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2114": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7669
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2115": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7669
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2116": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7672
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2118": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7672
      ],
      "op": "MUL",
      "path": "7"
    },
    "2119": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7672
      ],
      "op": "ADD",
      "path": "7"
    },
    "2120": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7644,
        7686
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2121": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 16,
      "value": "0x40"
    },
    "2123": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2124": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2129": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2131": {
      "op": "EXP"
    },
    "2132": {
      "op": "SUB"
    },
    "2133": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2134": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "AND",
      "path": "7"
    },
    "2135": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2136": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2137": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2138": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2139": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xAE9C2C6481964847714CE58F65A7F6DCC41D0D8394449BACDF161B5920C4744A"
    },
    "2172": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2173": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2174": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2175": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "SUB",
      "path": "7"
    },
    "2176": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2178": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "ADD",
      "path": "7"
    },
    "2179": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2180": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7701,
        7724
      ],
      "op": "LOG1",
      "path": "7"
    },
    "2181": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        7460,
        7731
      ],
      "op": "POP",
      "path": "7"
    },
    "2182": {
      "fn": "MedianOracle.addProvider",
      "jump": "o",
      "offset": [
        7460,
        7731
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2183": {
      "offset": [
        637,
        663
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2184": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2186": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2187": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2188": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2189": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2190": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2191": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "LT",
      "path": "7"
    },
    "2192": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x895"
    },
    "2195": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2196": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2197": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2198": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2200": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2201": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2202": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2203": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2205": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2206": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2207": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2208": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "ADD",
      "path": "7"
    },
    "2209": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2216": {
      "op": "EXP"
    },
    "2217": {
      "op": "SUB"
    },
    "2218": {
      "offset": [
        637,
        663
      ],
      "op": "AND",
      "path": "7"
    },
    "2219": {
      "fn": "MedianOracle.addProvider",
      "offset": [
        637,
        663
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2220": {
      "op": "POP"
    },
    "2221": {
      "offset": [
        637,
        663
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2222": {
      "fn": "MedianOracle.addProvider",
      "jump": "o",
      "offset": [
        637,
        663
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2223": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1273,
        1400
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2224": {
      "offset": [
        824,
        833
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8B7"
    },
    "2227": {
      "offset": [
        824,
        831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA75"
    },
    "2230": {
      "jump": "i",
      "offset": [
        824,
        833
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2231": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        824,
        833
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2232": {
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2234": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        816,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x8C2"
    },
    "2237": {
      "offset": [
        816,
        834
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2238": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        816,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2240": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        816,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2241": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        816,
        834
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2242": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        816,
        834
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2243": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1367,
        1368
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 17,
      "value": "0x0"
    },
    "2245": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1351,
        1357
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2246": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1351,
        1357
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2247": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1330,
        1370
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2249": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1330,
        1370
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2256": {
      "op": "EXP"
    },
    "2257": {
      "op": "SUB"
    },
    "2258": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1351,
        1357
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2259": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1351,
        1357
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2260": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1351,
        1357
      ],
      "op": "AND",
      "path": "14"
    },
    "2261": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1351,
        1357
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2262": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1330,
        1370
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2295": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1330,
        1370
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2296": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1367,
        1368
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2297": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1367,
        1368
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2298": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1330,
        1370
      ],
      "op": "LOG3",
      "path": "14"
    },
    "2299": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1393,
        1394
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 18,
      "value": "0x0"
    },
    "2301": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1376,
        1395
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2302": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1376,
        1395
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "2303": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "2324": {
      "op": "NOT"
    },
    "2325": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1376,
        1395
      ],
      "op": "AND",
      "path": "14"
    },
    "2326": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1376,
        1395
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2327": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1376,
        1395
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "2328": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1273,
        1400
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2329": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2330": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7986,
        7995
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2332": {
      "offset": [
        824,
        833
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x923"
    },
    "2335": {
      "offset": [
        824,
        831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA75"
    },
    "2338": {
      "jump": "i",
      "offset": [
        824,
        833
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2339": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        824,
        833
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2340": {
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2341": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2342": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        816,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x92E"
    },
    "2345": {
      "offset": [
        816,
        834
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2346": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        816,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2348": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        816,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2349": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        816,
        834
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2350": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        816,
        834
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2357": {
      "op": "EXP"
    },
    "2358": {
      "op": "SUB"
    },
    "2359": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 19
    },
    "2360": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "AND",
      "path": "7"
    },
    "2361": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2363": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2364": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2365": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2366": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7961
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2368": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2370": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2371": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2373": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2374": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7946,
        7971
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2375": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7939,
        7971
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x94F"
    },
    "2378": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7939,
        7971
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2379": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7939,
        7971
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE07"
    },
    "2382": {
      "fn": "MedianOracle.removeProvider",
      "jump": "i",
      "offset": [
        7939,
        7971
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2383": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7939,
        7971
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2384": {
      "op": "POP"
    },
    "2385": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7998,
        7999
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2387": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7981,
        8338
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2388": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8005,
        8014
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2390": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8005,
        8021
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2391": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8001,
        8021
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2392": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8001,
        8021
      ],
      "op": "LT",
      "path": "7"
    },
    "2393": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7981,
        8338
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2394": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7981,
        8338
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA61"
    },
    "2397": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7981,
        8338
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2398": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8062,
        8070
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2405": {
      "op": "EXP"
    },
    "2406": {
      "op": "SUB"
    },
    "2407": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8070
      ],
      "op": "AND",
      "path": "7"
    },
    "2408": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8055
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2410": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8056,
        8057
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2411": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2412": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2413": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2414": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "LT",
      "path": "7"
    },
    "2415": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2416": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2417": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x976"
    },
    "2420": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2421": {
      "dev": "Index out of range",
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2422": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2423": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2425": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2426": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2427": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2428": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2430": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2431": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2432": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2433": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "ADD",
      "path": "7"
    },
    "2434": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2437": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2441": {
      "op": "EXP"
    },
    "2442": {
      "op": "SUB"
    },
    "2443": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8058
      ],
      "op": "AND",
      "path": "7"
    },
    "2444": {
      "branch": 60,
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8046,
        8070
      ],
      "op": "EQ",
      "path": "7"
    },
    "2445": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8042,
        8328
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2446": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8042,
        8328
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA59"
    },
    "2449": {
      "branch": 60,
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8042,
        8328
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2450": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8104,
        8113
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2452": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8104,
        8120
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2453": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8104,
        8120
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2454": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8094,
        8099
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2455": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8094,
        8099
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2456": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8094,
        8099
      ],
      "op": "ADD",
      "path": "7"
    },
    "2457": {
      "branch": 61,
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8094,
        8120
      ],
      "op": "EQ",
      "path": "7"
    },
    "2458": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8090,
        8207
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA04"
    },
    "2461": {
      "branch": 61,
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8090,
        8207
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2462": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8168
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 20,
      "value": "0x1"
    },
    "2464": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8169,
        8185
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2465": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8169,
        8185
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2468": {
      "op": "NOT"
    },
    "2469": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8169,
        8187
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2470": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8169,
        8187
      ],
      "op": "ADD",
      "path": "7"
    },
    "2471": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8169,
        8187
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2472": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2473": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "LT",
      "path": "7"
    },
    "2474": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9AF"
    },
    "2477": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2478": {
      "dev": "Index out of range",
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2479": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2480": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2482": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2483": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2484": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2485": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2487": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2488": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2489": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2490": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "ADD",
      "path": "7"
    },
    "2491": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2492": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2494": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2495": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2502": {
      "op": "EXP"
    },
    "2503": {
      "op": "SUB"
    },
    "2504": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2505": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2506": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "AND",
      "path": "7"
    },
    "2507": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8159,
        8188
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2508": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8154,
        8155
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2509": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8154,
        8155
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2510": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2511": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "LT",
      "path": "7"
    },
    "2512": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9D5"
    },
    "2515": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2516": {
      "dev": "Index out of range",
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2517": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2518": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2519": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2521": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2522": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2524": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2526": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2527": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "ADD",
      "path": "7"
    },
    "2528": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8156
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2530": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "2533": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "EXP",
      "path": "7"
    },
    "2534": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2535": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2536": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2543": {
      "op": "EXP"
    },
    "2544": {
      "op": "SUB"
    },
    "2545": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "MUL",
      "path": "7"
    },
    "2546": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "NOT",
      "path": "7"
    },
    "2547": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "AND",
      "path": "7"
    },
    "2548": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2549": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2556": {
      "op": "EXP"
    },
    "2557": {
      "op": "SUB"
    },
    "2558": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "AND",
      "path": "7"
    },
    "2559": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "MUL",
      "path": "7"
    },
    "2560": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "OR",
      "path": "7"
    },
    "2561": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2562": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2563": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8144,
        8188
      ],
      "op": "POP",
      "path": "7"
    },
    "2564": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8090,
        8207
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2565": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8224,
        8233
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 21,
      "value": "0x1"
    },
    "2567": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8224,
        8242
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2568": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8224,
        8242
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2569": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8224,
        8242
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2570": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8224,
        8242
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA17"
    },
    "2573": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8224,
        8242
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2576": {
      "op": "NOT"
    },
    "2577": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8224,
        8242
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2578": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8224,
        8242
      ],
      "op": "ADD",
      "path": "7"
    },
    "2579": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8224,
        8242
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE23"
    },
    "2582": {
      "fn": "MedianOracle.removeProvider",
      "jump": "i",
      "offset": [
        8224,
        8242
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2583": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8224,
        8242
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2584": {
      "op": "POP"
    },
    "2585": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 22,
      "value": "0x40"
    },
    "2587": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2588": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2595": {
      "op": "EXP"
    },
    "2596": {
      "op": "SUB"
    },
    "2597": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2598": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "AND",
      "path": "7"
    },
    "2599": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2600": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2601": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2602": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2603": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x1589F8555933761A3CFF8AA925061BE3B46E2DD43F621322AB611D300F62B1D9"
    },
    "2636": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2637": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2638": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2639": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "SUB",
      "path": "7"
    },
    "2640": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2642": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "ADD",
      "path": "7"
    },
    "2643": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2644": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8265,
        8290
      ],
      "op": "LOG1",
      "path": "7"
    },
    "2645": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8308,
        8313
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 23,
      "value": "0xA61"
    },
    "2648": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8308,
        8313
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2649": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8042,
        8328
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2650": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8023,
        8026
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 24,
      "value": "0x1"
    },
    "2652": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        8023,
        8026
      ],
      "op": "ADD",
      "path": "7"
    },
    "2653": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7981,
        8338
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x953"
    },
    "2656": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7981,
        8338
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2657": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7981,
        8338
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2658": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "POP",
      "path": "7"
    },
    "2659": {
      "fn": "MedianOracle.removeProvider",
      "offset": [
        7848,
        8344
      ],
      "op": "POP",
      "path": "7"
    },
    "2660": {
      "fn": "MedianOracle.removeProvider",
      "jump": "o",
      "offset": [
        7848,
        8344
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2661": {
      "fn": "Ownable.owner",
      "offset": [
        639,
        709
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2662": {
      "fn": "Ownable.owner",
      "offset": [
        676,
        683
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2664": {
      "fn": "Ownable.owner",
      "offset": [
        698,
        704
      ],
      "op": "SLOAD",
      "path": "14",
      "statement": 25
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2669": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2671": {
      "op": "EXP"
    },
    "2672": {
      "op": "SUB"
    },
    "2673": {
      "fn": "Ownable.owner",
      "offset": [
        698,
        704
      ],
      "op": "AND",
      "path": "14"
    },
    "2674": {
      "fn": "Ownable.owner",
      "offset": [
        639,
        709
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2675": {
      "fn": "Ownable.owner",
      "offset": [
        639,
        709
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2676": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        639,
        709
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2677": {
      "fn": "Ownable.isOwner",
      "offset": [
        926,
        1009
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2678": {
      "fn": "Ownable.isOwner",
      "offset": [
        965,
        969
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2680": {
      "fn": "Ownable.isOwner",
      "offset": [
        998,
        1004
      ],
      "op": "SLOAD",
      "path": "14",
      "statement": 26
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2685": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2687": {
      "op": "EXP"
    },
    "2688": {
      "op": "SUB"
    },
    "2689": {
      "fn": "Ownable.isOwner",
      "offset": [
        998,
        1004
      ],
      "op": "AND",
      "path": "14"
    },
    "2690": {
      "fn": "Ownable.isOwner",
      "offset": [
        984,
        994
      ],
      "op": "CALLER",
      "path": "14"
    },
    "2691": {
      "fn": "Ownable.isOwner",
      "offset": [
        984,
        1004
      ],
      "op": "EQ",
      "path": "14"
    },
    "2692": {
      "fn": "Ownable.isOwner",
      "offset": [
        984,
        1004
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2693": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        926,
        1009
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2694": {
      "offset": [
        1426,
        1461
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2695": {
      "fn": "Ownable.isOwner",
      "offset": [
        1426,
        1461
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "2697": {
      "fn": "Ownable.isOwner",
      "offset": [
        1426,
        1461
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2698": {
      "fn": "Ownable.isOwner",
      "offset": [
        1426,
        1461
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2699": {
      "fn": "Ownable.isOwner",
      "jump": "o",
      "offset": [
        1426,
        1461
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2700": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4665,
        4938
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2701": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4738,
        4748
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2702": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4712,
        4735
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2704": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4799
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 27
    },
    "2705": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4799
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2706": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4799
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2707": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4782
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2709": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4799
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2711": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4799
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2712": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4799
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2714": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4799
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2715": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4799
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2716": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4812
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2717": {
      "branch": 62,
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4767,
        4816
      ],
      "op": "GT",
      "path": "7"
    },
    "2718": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4758,
        4817
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAA6"
    },
    "2721": {
      "branch": 62,
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4758,
        4817
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2722": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4758,
        4817
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2724": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4758,
        4817
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2725": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4758,
        4817
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2726": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4758,
        4817
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2733": {
      "op": "EXP"
    },
    "2734": {
      "op": "SUB"
    },
    "2735": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "AND",
      "path": "7",
      "statement": 28
    },
    "2736": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2738": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2739": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2740": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2741": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4842
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2743": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2745": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2746": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2747": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2748": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2750": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2751": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2752": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4859
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2753": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4873,
        4874
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2755": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4874
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2756": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4874
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2757": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4827,
        4874
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2758": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4884,
        4919
      ],
      "op": "SWAP2",
      "path": "7",
      "statement": 29
    },
    "2759": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4884,
        4919
      ],
      "op": "ADD",
      "path": "7"
    },
    "2760": {
      "fn": "MedianOracle.purgeReports",
      "offset": [
        4884,
        4931
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2761": {
      "fn": "MedianOracle.purgeReports",
      "jump": "o",
      "offset": [
        4665,
        4938
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2762": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3182,
        3322
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2763": {
      "offset": [
        824,
        833
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAD2"
    },
    "2766": {
      "offset": [
        824,
        831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA75"
    },
    "2769": {
      "jump": "i",
      "offset": [
        824,
        833
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2770": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        824,
        833
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2771": {
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2772": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2773": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        816,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xADD"
    },
    "2776": {
      "offset": [
        816,
        834
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2777": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        816,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2779": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        816,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2780": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        816,
        834
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2781": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        816,
        834
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2782": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3283,
        3297
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 30,
      "value": "0x4"
    },
    "2784": {
      "fn": "MedianOracle.setReportDelaySec",
      "offset": [
        3283,
        3315
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2785": {
      "fn": "MedianOracle.setReportDelaySec",
      "jump": "o",
      "offset": [
        3182,
        3322
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2786": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        8417,
        8542
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2787": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        8519,
        8528
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 31,
      "value": "0x1"
    },
    "2789": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        8519,
        8535
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2790": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        8417,
        8542
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2791": {
      "fn": "MedianOracle.providersSize",
      "jump": "o",
      "offset": [
        8417,
        8542
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2792": {
      "offset": [
        1144,
        1182
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2793": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        1144,
        1182
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2795": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        1144,
        1182
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2796": {
      "fn": "MedianOracle.providersSize",
      "offset": [
        1144,
        1182
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2797": {
      "fn": "MedianOracle.providersSize",
      "jump": "o",
      "offset": [
        1144,
        1182
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2798": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3535,
        3723
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2799": {
      "offset": [
        824,
        833
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xAF6"
    },
    "2802": {
      "offset": [
        824,
        831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA75"
    },
    "2805": {
      "jump": "i",
      "offset": [
        824,
        833
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2806": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        824,
        833
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2807": {
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2808": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2809": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        816,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB01"
    },
    "2812": {
      "offset": [
        816,
        834
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2813": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        816,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2815": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        816,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2816": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        816,
        834
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2817": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        816,
        834
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2818": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3668,
        3669
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 32,
      "value": "0x0"
    },
    "2820": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3648,
        3669
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2821": {
      "branch": 63,
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3648,
        3669
      ],
      "op": "GT",
      "path": "7"
    },
    "2822": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3640,
        3670
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB0E"
    },
    "2825": {
      "branch": 63,
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3640,
        3670
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2826": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3640,
        3670
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2828": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3640,
        3670
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2829": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3640,
        3670
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2830": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3640,
        3670
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2831": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3680,
        3696
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0x5"
    },
    "2833": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        3680,
        3716
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2834": {
      "fn": "MedianOracle.setMinimumProviders",
      "jump": "o",
      "offset": [
        3535,
        3723
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2835": {
      "offset": [
        775,
        828
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2836": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2838": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2840": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2841": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2842": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2844": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2845": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2847": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2849": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2850": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2851": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2853": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2854": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "LT",
      "path": "7"
    },
    "2855": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2856": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2857": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB2E"
    },
    "2860": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2861": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "INVALID",
      "path": "7"
    },
    "2862": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2863": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "2865": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "MUL",
      "path": "7"
    },
    "2866": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "ADD",
      "path": "7"
    },
    "2867": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2868": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2869": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2871": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2872": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2873": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "ADD",
      "path": "7"
    },
    "2874": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2875": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2876": {
      "fn": "MedianOracle.setMinimumProviders",
      "offset": [
        775,
        828
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2877": {
      "op": "POP"
    },
    "2878": {
      "offset": [
        775,
        828
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2879": {
      "op": "POP"
    },
    "2880": {
      "offset": [
        775,
        828
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2881": {
      "fn": "MedianOracle.setMinimumProviders",
      "jump": "o",
      "offset": [
        775,
        828
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2883": {
      "offset": [
        824,
        833
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB4A"
    },
    "2886": {
      "offset": [
        824,
        831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA75"
    },
    "2889": {
      "jump": "i",
      "offset": [
        824,
        833
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        824,
        833
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2891": {
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2892": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        816,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB55"
    },
    "2896": {
      "offset": [
        816,
        834
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2897": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        816,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2899": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        816,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2900": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        816,
        834
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2901": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        816,
        834
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2902": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1629,
        1657
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 34,
      "value": "0xB5E"
    },
    "2905": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1648,
        1656
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2906": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1629,
        1647
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD41"
    },
    "2909": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1629,
        1657
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2910": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1629,
        1657
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2911": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1561,
        1662
      ],
      "op": "POP",
      "path": "14"
    },
    "2912": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1561,
        1662
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2913": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2741,
        2990
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2914": {
      "offset": [
        824,
        833
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB69"
    },
    "2917": {
      "offset": [
        824,
        831
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA75"
    },
    "2920": {
      "jump": "i",
      "offset": [
        824,
        833
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2921": {
      "branch": 65,
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        824,
        833
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2922": {
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2923": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        816,
        834
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2924": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        816,
        834
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB74"
    },
    "2927": {
      "branch": 65,
      "offset": [
        816,
        834
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2928": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        816,
        834
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2930": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        816,
        834
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2931": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        816,
        834
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2932": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        816,
        834
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2933": {
      "offset": [
        1671,
        1680
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x12BED400"
    },
    "2938": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2868,
        2922
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 35
    },
    "2939": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2868,
        2922
      ],
      "op": "GT",
      "path": "7"
    },
    "2940": {
      "branch": 64,
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2868,
        2922
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2941": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2860,
        2923
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB85"
    },
    "2944": {
      "branch": 64,
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2860,
        2923
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2945": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2860,
        2923
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2947": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2860,
        2923
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2948": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2860,
        2923
      ],
      "op": "REVERT",
      "path": "7"
    },
    "2949": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2860,
        2923
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2950": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2933,
        2956
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 36,
      "value": "0x3"
    },
    "2952": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "offset": [
        2933,
        2983
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "2953": {
      "fn": "MedianOracle.setReportExpirationTimeSec",
      "jump": "o",
      "offset": [
        2741,
        2990
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2954": {
      "fn": "SafeMath.add",
      "offset": [
        1272,
        1403
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2955": {
      "fn": "SafeMath.add",
      "offset": [
        1330,
        1337
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2957": {
      "fn": "SafeMath.add",
      "offset": [
        1357,
        1362
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2958": {
      "fn": "SafeMath.add",
      "offset": [
        1357,
        1362
      ],
      "op": "DUP3",
      "path": "13"
    },
    "2959": {
      "fn": "SafeMath.add",
      "offset": [
        1357,
        1362
      ],
      "op": "ADD",
      "path": "13"
    },
    "2960": {
      "fn": "SafeMath.add",
      "offset": [
        1376,
        1382
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 37
    },
    "2961": {
      "fn": "SafeMath.add",
      "offset": [
        1376,
        1382
      ],
      "op": "DUP2",
      "path": "13"
    },
    "2962": {
      "fn": "SafeMath.add",
      "offset": [
        1376,
        1382
      ],
      "op": "LT",
      "path": "13"
    },
    "2963": {
      "branch": 67,
      "fn": "SafeMath.add",
      "offset": [
        1376,
        1382
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2964": {
      "fn": "SafeMath.add",
      "offset": [
        1368,
        1383
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB9C"
    },
    "2967": {
      "branch": 67,
      "fn": "SafeMath.add",
      "offset": [
        1368,
        1383
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2968": {
      "fn": "SafeMath.add",
      "offset": [
        1368,
        1383
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2970": {
      "fn": "SafeMath.add",
      "offset": [
        1368,
        1383
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2971": {
      "fn": "SafeMath.add",
      "offset": [
        1368,
        1383
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2972": {
      "fn": "SafeMath.add",
      "offset": [
        1368,
        1383
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2973": {
      "fn": "SafeMath.add",
      "offset": [
        1397,
        1398
      ],
      "op": "SWAP4",
      "path": "13",
      "statement": 38
    },
    "2974": {
      "fn": "SafeMath.add",
      "offset": [
        1272,
        1403
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "2975": {
      "op": "POP"
    },
    "2976": {
      "op": "POP"
    },
    "2977": {
      "op": "POP"
    },
    "2978": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        1272,
        1403
      ],
      "op": "JUMP",
      "path": "13"
    },
    "2979": {
      "fn": "SafeMath.sub",
      "offset": [
        1078,
        1209
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2980": {
      "fn": "SafeMath.sub",
      "offset": [
        1136,
        1143
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2982": {
      "fn": "SafeMath.sub",
      "offset": [
        1136,
        1143
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2983": {
      "fn": "SafeMath.sub",
      "offset": [
        1159,
        1165
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 39
    },
    "2984": {
      "fn": "SafeMath.sub",
      "offset": [
        1159,
        1165
      ],
      "op": "DUP4",
      "path": "13"
    },
    "2985": {
      "fn": "SafeMath.sub",
      "offset": [
        1159,
        1165
      ],
      "op": "GT",
      "path": "13"
    },
    "2986": {
      "branch": 68,
      "fn": "SafeMath.sub",
      "offset": [
        1159,
        1165
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "2987": {
      "fn": "SafeMath.sub",
      "offset": [
        1151,
        1166
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xBB3"
    },
    "2990": {
      "branch": 68,
      "fn": "SafeMath.sub",
      "offset": [
        1151,
        1166
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "2991": {
      "fn": "SafeMath.sub",
      "offset": [
        1151,
        1166
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "2993": {
      "fn": "SafeMath.sub",
      "offset": [
        1151,
        1166
      ],
      "op": "DUP1",
      "path": "13"
    },
    "2994": {
      "fn": "SafeMath.sub",
      "offset": [
        1151,
        1166
      ],
      "op": "REVERT",
      "path": "13"
    },
    "2995": {
      "fn": "SafeMath.sub",
      "offset": [
        1151,
        1166
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "2996": {
      "op": "POP"
    },
    "2997": {
      "op": "POP"
    },
    "2998": {
      "fn": "SafeMath.sub",
      "offset": [
        1184,
        1189
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "2999": {
      "fn": "SafeMath.sub",
      "offset": [
        1184,
        1189
      ],
      "op": "SUB",
      "path": "13"
    },
    "3000": {
      "fn": "SafeMath.sub",
      "offset": [
        1184,
        1189
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "3001": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1078,
        1209
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3002": {
      "fn": "Select.computeMedian",
      "offset": [
        468,
        1051
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3003": {
      "fn": "Select.computeMedian",
      "offset": [
        569,
        576
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3005": {
      "fn": "Select.computeMedian",
      "offset": [
        648,
        657
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3006": {
      "fn": "Select.computeMedian",
      "offset": [
        697,
        706
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3008": {
      "fn": "Select.computeMedian",
      "offset": [
        768,
        779
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3009": {
      "fn": "Select.computeMedian",
      "offset": [
        607,
        608
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 40,
      "value": "0x0"
    },
    "3011": {
      "fn": "Select.computeMedian",
      "offset": [
        600,
        604
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3012": {
      "branch": 69,
      "fn": "Select.computeMedian",
      "offset": [
        600,
        608
      ],
      "op": "GT",
      "path": "8"
    },
    "3013": {
      "fn": "Select.computeMedian",
      "offset": [
        600,
        632
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3014": {
      "fn": "Select.computeMedian",
      "offset": [
        600,
        632
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3015": {
      "fn": "Select.computeMedian",
      "offset": [
        600,
        632
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBD1"
    },
    "3018": {
      "branch": 69,
      "fn": "Select.computeMedian",
      "offset": [
        600,
        632
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3019": {
      "fn": "Select.computeMedian",
      "offset": [
        600,
        632
      ],
      "op": "POP",
      "path": "8"
    },
    "3020": {
      "fn": "Select.computeMedian",
      "offset": [
        628,
        632
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3021": {
      "fn": "Select.computeMedian",
      "offset": [
        612,
        617
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3022": {
      "fn": "Select.computeMedian",
      "offset": [
        612,
        624
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3023": {
      "fn": "Select.computeMedian",
      "offset": [
        612,
        632
      ],
      "op": "LT",
      "path": "8"
    },
    "3024": {
      "branch": 70,
      "fn": "Select.computeMedian",
      "offset": [
        612,
        632
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3025": {
      "fn": "Select.computeMedian",
      "offset": [
        600,
        632
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3026": {
      "fn": "Select.computeMedian",
      "offset": [
        592,
        633
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3027": {
      "fn": "Select.computeMedian",
      "offset": [
        592,
        633
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3028": {
      "fn": "Select.computeMedian",
      "offset": [
        592,
        633
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBDC"
    },
    "3031": {
      "branch": 70,
      "fn": "Select.computeMedian",
      "offset": [
        592,
        633
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3032": {
      "fn": "Select.computeMedian",
      "offset": [
        592,
        633
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3034": {
      "fn": "Select.computeMedian",
      "offset": [
        592,
        633
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3035": {
      "fn": "Select.computeMedian",
      "offset": [
        592,
        633
      ],
      "op": "REVERT",
      "path": "8"
    },
    "3036": {
      "fn": "Select.computeMedian",
      "offset": [
        592,
        633
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3037": {
      "fn": "Select.computeMedian",
      "offset": [
        660,
        661
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3039": {
      "fn": "Select.computeMedian",
      "offset": [
        648,
        661
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3040": {
      "fn": "Select.computeMedian",
      "offset": [
        648,
        661
      ],
      "op": "POP",
      "path": "8"
    },
    "3041": {
      "fn": "Select.computeMedian",
      "offset": [
        643,
        888
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3042": {
      "fn": "Select.computeMedian",
      "offset": [
        667,
        671
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3043": {
      "fn": "Select.computeMedian",
      "offset": [
        663,
        664
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3044": {
      "fn": "Select.computeMedian",
      "offset": [
        663,
        671
      ],
      "op": "LT",
      "path": "8"
    },
    "3045": {
      "fn": "Select.computeMedian",
      "offset": [
        643,
        888
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3046": {
      "fn": "Select.computeMedian",
      "offset": [
        643,
        888
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCB4"
    },
    "3049": {
      "fn": "Select.computeMedian",
      "offset": [
        643,
        888
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3050": {
      "fn": "Select.computeMedian",
      "offset": [
        709,
        710
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3051": {
      "fn": "Select.computeMedian",
      "offset": [
        697,
        710
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3052": {
      "fn": "Select.computeMedian",
      "offset": [
        697,
        710
      ],
      "op": "POP",
      "path": "8"
    },
    "3053": {
      "fn": "Select.computeMedian",
      "offset": [
        692,
        878
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3054": {
      "fn": "Select.computeMedian",
      "offset": [
        716,
        717
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3056": {
      "fn": "Select.computeMedian",
      "offset": [
        712,
        713
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3057": {
      "fn": "Select.computeMedian",
      "offset": [
        712,
        717
      ],
      "op": "GT",
      "path": "8"
    },
    "3058": {
      "fn": "Select.computeMedian",
      "offset": [
        712,
        743
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3059": {
      "fn": "Select.computeMedian",
      "offset": [
        712,
        743
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3060": {
      "fn": "Select.computeMedian",
      "offset": [
        712,
        743
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC2D"
    },
    "3063": {
      "fn": "Select.computeMedian",
      "offset": [
        712,
        743
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3064": {
      "fn": "Select.computeMedian",
      "offset": [
        712,
        743
      ],
      "op": "POP",
      "path": "8"
    },
    "3065": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        740
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3066": {
      "fn": "Select.computeMedian",
      "offset": [
        741,
        742
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3067": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3068": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3069": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3070": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "LT",
      "path": "8"
    },
    "3071": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3072": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3073": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC06"
    },
    "3076": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3077": {
      "dev": "Index out of range",
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "INVALID",
      "path": "8"
    },
    "3078": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3079": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3080": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3082": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "ADD",
      "path": "8"
    },
    "3083": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3084": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3086": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "MUL",
      "path": "8"
    },
    "3087": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "ADD",
      "path": "8"
    },
    "3088": {
      "fn": "Select.computeMedian",
      "offset": [
        735,
        743
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3089": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        726
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3090": {
      "fn": "Select.computeMedian",
      "offset": [
        729,
        730
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3092": {
      "fn": "Select.computeMedian",
      "offset": [
        727,
        728
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3093": {
      "fn": "Select.computeMedian",
      "offset": [
        727,
        730
      ],
      "op": "SUB",
      "path": "8"
    },
    "3094": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3095": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3096": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3097": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "LT",
      "path": "8"
    },
    "3098": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3099": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3100": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC21"
    },
    "3103": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3104": {
      "dev": "Index out of range",
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "INVALID",
      "path": "8"
    },
    "3105": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3106": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3107": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3109": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "ADD",
      "path": "8"
    },
    "3110": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3111": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3113": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "MUL",
      "path": "8"
    },
    "3114": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "ADD",
      "path": "8"
    },
    "3115": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        731
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3116": {
      "fn": "Select.computeMedian",
      "offset": [
        721,
        743
      ],
      "op": "GT",
      "path": "8"
    },
    "3117": {
      "fn": "Select.computeMedian",
      "offset": [
        712,
        743
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3118": {
      "fn": "Select.computeMedian",
      "offset": [
        692,
        878
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3119": {
      "fn": "Select.computeMedian",
      "offset": [
        692,
        878
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCA9"
    },
    "3122": {
      "fn": "Select.computeMedian",
      "offset": [
        692,
        878
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3123": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        787
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3124": {
      "fn": "Select.computeMedian",
      "offset": [
        788,
        789
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3125": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3126": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3127": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3128": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "LT",
      "path": "8"
    },
    "3129": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3130": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3131": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC40"
    },
    "3134": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3135": {
      "dev": "Index out of range",
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "INVALID",
      "path": "8"
    },
    "3136": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3137": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3138": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3140": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "ADD",
      "path": "8"
    },
    "3141": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3142": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3144": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "MUL",
      "path": "8"
    },
    "3145": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "ADD",
      "path": "8"
    },
    "3146": {
      "fn": "Select.computeMedian",
      "offset": [
        782,
        790
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3147": {
      "fn": "Select.computeMedian",
      "offset": [
        768,
        790
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3148": {
      "fn": "Select.computeMedian",
      "offset": [
        768,
        790
      ],
      "op": "POP",
      "path": "8"
    },
    "3149": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        824
      ],
      "op": "DUP6",
      "path": "8",
      "statement": 41
    },
    "3150": {
      "fn": "Select.computeMedian",
      "offset": [
        827,
        828
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3152": {
      "fn": "Select.computeMedian",
      "offset": [
        825,
        826
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3153": {
      "fn": "Select.computeMedian",
      "offset": [
        825,
        828
      ],
      "op": "SUB",
      "path": "8"
    },
    "3154": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3155": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3156": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3157": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "LT",
      "path": "8"
    },
    "3158": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3159": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3160": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC5D"
    },
    "3163": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3164": {
      "dev": "Index out of range",
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "INVALID",
      "path": "8"
    },
    "3165": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3166": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3167": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3169": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "ADD",
      "path": "8"
    },
    "3170": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3171": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3173": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "MUL",
      "path": "8"
    },
    "3174": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "ADD",
      "path": "8"
    },
    "3175": {
      "fn": "Select.computeMedian",
      "offset": [
        819,
        829
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3176": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        813
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3177": {
      "fn": "Select.computeMedian",
      "offset": [
        814,
        815
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3178": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3179": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3180": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3181": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "LT",
      "path": "8"
    },
    "3182": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3183": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3184": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC75"
    },
    "3187": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3188": {
      "dev": "Index out of range",
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "INVALID",
      "path": "8"
    },
    "3189": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3190": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3192": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3193": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3194": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "MUL",
      "path": "8"
    },
    "3195": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3196": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3197": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "ADD",
      "path": "8"
    },
    "3198": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        816
      ],
      "op": "ADD",
      "path": "8"
    },
    "3199": {
      "fn": "Select.computeMedian",
      "offset": [
        808,
        829
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3200": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "DUP6",
      "path": "8",
      "statement": 42
    },
    "3201": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3202": {
      "fn": "Select.computeMedian",
      "offset": [
        860,
        863
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3203": {
      "fn": "Select.computeMedian",
      "offset": [
        860,
        863
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3204": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        852
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3205": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        852
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3208": {
      "op": "NOT"
    },
    "3209": {
      "fn": "Select.computeMedian",
      "offset": [
        853,
        856
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3210": {
      "fn": "Select.computeMedian",
      "offset": [
        853,
        856
      ],
      "op": "ADD",
      "path": "8"
    },
    "3211": {
      "fn": "Select.computeMedian",
      "offset": [
        853,
        856
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3212": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3213": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "LT",
      "path": "8"
    },
    "3214": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC93"
    },
    "3217": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3218": {
      "dev": "Index out of range",
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "INVALID",
      "path": "8"
    },
    "3219": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3220": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3222": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3223": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3224": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "MUL",
      "path": "8"
    },
    "3225": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3226": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3227": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "ADD",
      "path": "8"
    },
    "3228": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        857
      ],
      "op": "ADD",
      "path": "8"
    },
    "3229": {
      "fn": "Select.computeMedian",
      "offset": [
        847,
        863
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3232": {
      "op": "NOT"
    },
    "3233": {
      "fn": "Select.computeMedian",
      "offset": [
        745,
        748
      ],
      "op": "SWAP1",
      "path": "8",
      "statement": 43
    },
    "3234": {
      "fn": "Select.computeMedian",
      "offset": [
        745,
        748
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3235": {
      "fn": "Select.computeMedian",
      "offset": [
        745,
        748
      ],
      "op": "ADD",
      "path": "8"
    },
    "3236": {
      "fn": "Select.computeMedian",
      "offset": [
        745,
        748
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3237": {
      "fn": "Select.computeMedian",
      "offset": [
        692,
        878
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBED"
    },
    "3240": {
      "fn": "Select.computeMedian",
      "offset": [
        692,
        878
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3241": {
      "fn": "Select.computeMedian",
      "offset": [
        692,
        878
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3242": {
      "fn": "Select.computeMedian",
      "offset": [
        673,
        676
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 44,
      "value": "0x1"
    },
    "3244": {
      "fn": "Select.computeMedian",
      "offset": [
        673,
        676
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3245": {
      "fn": "Select.computeMedian",
      "offset": [
        673,
        676
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3246": {
      "fn": "Select.computeMedian",
      "offset": [
        673,
        676
      ],
      "op": "ADD",
      "path": "8"
    },
    "3247": {
      "fn": "Select.computeMedian",
      "offset": [
        673,
        676
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3248": {
      "fn": "Select.computeMedian",
      "offset": [
        643,
        888
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBE1"
    },
    "3251": {
      "fn": "Select.computeMedian",
      "offset": [
        643,
        888
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3252": {
      "fn": "Select.computeMedian",
      "offset": [
        643,
        888
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3253": {
      "fn": "Select.computeMedian",
      "offset": [
        908,
        909
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3255": {
      "fn": "Select.computeMedian",
      "offset": [
        901,
        905
      ],
      "op": "DUP6",
      "path": "8"
    },
    "3256": {
      "fn": "Select.computeMedian",
      "offset": [
        901,
        909
      ],
      "op": "MOD",
      "path": "8"
    },
    "3257": {
      "fn": "Select.computeMedian",
      "offset": [
        913,
        914
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3259": {
      "branch": 71,
      "fn": "Select.computeMedian",
      "offset": [
        901,
        914
      ],
      "op": "EQ",
      "path": "8"
    },
    "3260": {
      "fn": "Select.computeMedian",
      "offset": [
        897,
        1045
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3261": {
      "fn": "Select.computeMedian",
      "offset": [
        897,
        1045
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCE2"
    },
    "3264": {
      "branch": 71,
      "fn": "Select.computeMedian",
      "offset": [
        897,
        1045
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3265": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        942
      ],
      "op": "DUP6",
      "path": "8",
      "statement": 45
    },
    "3266": {
      "fn": "Select.computeMedian",
      "offset": [
        950,
        951
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3268": {
      "fn": "Select.computeMedian",
      "offset": [
        943,
        947
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3269": {
      "fn": "Select.computeMedian",
      "offset": [
        943,
        951
      ],
      "op": "DIV",
      "path": "8"
    },
    "3270": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3271": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3272": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3273": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "LT",
      "path": "8"
    },
    "3274": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3275": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3276": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCD1"
    },
    "3279": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3280": {
      "dev": "Index out of range",
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "INVALID",
      "path": "8"
    },
    "3281": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3282": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3283": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3285": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "ADD",
      "path": "8"
    },
    "3286": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3287": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3289": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "MUL",
      "path": "8"
    },
    "3290": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "ADD",
      "path": "8"
    },
    "3291": {
      "fn": "Select.computeMedian",
      "offset": [
        937,
        952
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3292": {
      "fn": "Select.computeMedian",
      "offset": [
        930,
        952
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3293": {
      "fn": "Select.computeMedian",
      "offset": [
        930,
        952
      ],
      "op": "POP",
      "path": "8"
    },
    "3294": {
      "fn": "Select.computeMedian",
      "offset": [
        930,
        952
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD38"
    },
    "3297": {
      "fn": "Select.computeMedian",
      "offset": [
        930,
        952
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3298": {
      "fn": "Select.computeMedian",
      "offset": [
        897,
        1045
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3299": {
      "fn": "Select.computeMedian",
      "offset": [
        1033,
        1034
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 46,
      "value": "0x2"
    },
    "3301": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1030
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD2B"
    },
    "3304": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1015
      ],
      "op": "DUP8",
      "path": "8"
    },
    "3305": {
      "fn": "Select.computeMedian",
      "offset": [
        1027,
        1028
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3307": {
      "fn": "Select.computeMedian",
      "offset": [
        1033,
        1034
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3308": {
      "fn": "Select.computeMedian",
      "offset": [
        1016,
        1020
      ],
      "op": "DUP10",
      "path": "8"
    },
    "3309": {
      "fn": "Select.computeMedian",
      "offset": [
        1016,
        1024
      ],
      "op": "DIV",
      "path": "8"
    },
    "3310": {
      "fn": "Select.computeMedian",
      "offset": [
        1016,
        1028
      ],
      "op": "SUB",
      "path": "8"
    },
    "3311": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3312": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3313": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3314": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "LT",
      "path": "8"
    },
    "3315": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3316": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3317": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCFA"
    },
    "3320": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3321": {
      "dev": "Index out of range",
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "INVALID",
      "path": "8"
    },
    "3322": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3323": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3325": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3326": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3327": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "MUL",
      "path": "8"
    },
    "3328": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3329": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3330": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "ADD",
      "path": "8"
    },
    "3331": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "ADD",
      "path": "8"
    },
    "3332": {
      "fn": "Select.computeMedian",
      "offset": [
        1010,
        1029
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3333": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        995
      ],
      "op": "DUP9",
      "path": "8"
    },
    "3334": {
      "fn": "Select.computeMedian",
      "offset": [
        1003,
        1004
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x2"
    },
    "3336": {
      "fn": "Select.computeMedian",
      "offset": [
        996,
        1000
      ],
      "op": "DUP10",
      "path": "8"
    },
    "3337": {
      "fn": "Select.computeMedian",
      "offset": [
        996,
        1004
      ],
      "op": "DIV",
      "path": "8"
    },
    "3338": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3339": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3340": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3341": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "LT",
      "path": "8"
    },
    "3342": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3343": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3344": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD15"
    },
    "3347": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3348": {
      "dev": "Index out of range",
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "INVALID",
      "path": "8"
    },
    "3349": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3350": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3352": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3353": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3354": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "MUL",
      "path": "8"
    },
    "3355": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3356": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3357": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "ADD",
      "path": "8"
    },
    "3358": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "ADD",
      "path": "8"
    },
    "3359": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3360": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1005
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3361": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1030
      ],
      "op": "PUSH4",
      "path": "8",
      "value": "0xFFFFFFFF"
    },
    "3366": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1009
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB8A"
    },
    "3369": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1030
      ],
      "op": "AND",
      "path": "8"
    },
    "3370": {
      "fn": "Select.computeMedian",
      "jump": "i",
      "offset": [
        990,
        1030
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3371": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1030
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3372": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1034
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3373": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1034
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3374": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1034
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3375": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1034
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xD34"
    },
    "3378": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1034
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3379": {
      "dev": "Division by zero",
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1034
      ],
      "op": "INVALID",
      "path": "8"
    },
    "3380": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1034
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3381": {
      "fn": "Select.computeMedian",
      "offset": [
        990,
        1034
      ],
      "op": "DIV",
      "path": "8"
    },
    "3382": {
      "fn": "Select.computeMedian",
      "offset": [
        983,
        1034
      ],
      "op": "SWAP4",
      "path": "8"
    },
    "3383": {
      "fn": "Select.computeMedian",
      "offset": [
        983,
        1034
      ],
      "op": "POP",
      "path": "8"
    },
    "3384": {
      "fn": "Select.computeMedian",
      "offset": [
        897,
        1045
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3385": {
      "fn": "Select.computeMedian",
      "offset": [
        468,
        1051
      ],
      "op": "POP",
      "path": "8"
    },
    "3386": {
      "fn": "Select.computeMedian",
      "offset": [
        468,
        1051
      ],
      "op": "POP",
      "path": "8"
    },
    "3387": {
      "fn": "Select.computeMedian",
      "offset": [
        468,
        1051
      ],
      "op": "POP",
      "path": "8"
    },
    "3388": {
      "fn": "Select.computeMedian",
      "offset": [
        468,
        1051
      ],
      "op": "SWAP3",
      "path": "8"
    },
    "3389": {
      "fn": "Select.computeMedian",
      "offset": [
        468,
        1051
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3390": {
      "fn": "Select.computeMedian",
      "offset": [
        468,
        1051
      ],
      "op": "POP",
      "path": "8"
    },
    "3391": {
      "fn": "Select.computeMedian",
      "offset": [
        468,
        1051
      ],
      "op": "POP",
      "path": "8"
    },
    "3392": {
      "fn": "Select.computeMedian",
      "jump": "o",
      "offset": [
        468,
        1051
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3393": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1796,
        1965
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3394": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3400": {
      "op": "EXP"
    },
    "3401": {
      "op": "SUB"
    },
    "3402": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1865,
        1887
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 47
    },
    "3403": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1865,
        1887
      ],
      "op": "AND",
      "path": "14"
    },
    "3404": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1865,
        1887
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3405": {
      "branch": 66,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1865,
        1887
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "3406": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1857,
        1888
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xD56"
    },
    "3409": {
      "branch": 66,
      "fn": "Ownable._transferOwnership",
      "offset": [
        1857,
        1888
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "3410": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1857,
        1888
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "3412": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1857,
        1888
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3413": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1857,
        1888
      ],
      "op": "REVERT",
      "path": "14"
    },
    "3414": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1857,
        1888
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "3415": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1920,
        1926
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 48,
      "value": "0x0"
    },
    "3417": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1920,
        1926
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3418": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1920,
        1926
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3419": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1899,
        1937
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "3421": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1899,
        1937
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3428": {
      "op": "EXP"
    },
    "3429": {
      "op": "SUB"
    },
    "3430": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1899,
        1937
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3431": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1899,
        1937
      ],
      "op": "DUP6",
      "path": "14"
    },
    "3432": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1899,
        1937
      ],
      "op": "AND",
      "path": "14"
    },
    "3433": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1899,
        1937
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "3434": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1920,
        1926
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3435": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1920,
        1926
      ],
      "op": "AND",
      "path": "14"
    },
    "3436": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1920,
        1926
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1899,
        1937
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3470": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1899,
        1937
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3471": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1899,
        1937
      ],
      "op": "LOG3",
      "path": "14"
    },
    "3472": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1949
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 49,
      "value": "0x0"
    },
    "3474": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "DUP1",
      "path": "14"
    },
    "3475": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "3476": {
      "op": "PUSH20",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "3497": {
      "op": "NOT"
    },
    "3498": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "AND",
      "path": "14"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3503": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3505": {
      "op": "EXP"
    },
    "3506": {
      "op": "SUB"
    },
    "3507": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3508": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3509": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "3510": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "AND",
      "path": "14"
    },
    "3511": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3512": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3513": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "3514": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "OR",
      "path": "14"
    },
    "3515": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "3516": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        1943,
        1960
      ],
      "op": "SSTORE",
      "path": "14"
    },
    "3517": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        1796,
        1965
      ],
      "op": "JUMP",
      "path": "14"
    },
    "3518": {
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3519": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3521": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3522": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3523": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3524": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3525": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3526": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3527": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3528": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3529": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3531": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3532": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3533": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3534": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3535": {
      "op": "CODESIZE"
    },
    "3536": {
      "offset": [
        419,
        8544
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3537": {
      "op": "CODECOPY"
    },
    "3538": {
      "op": "POP"
    },
    "3539": {
      "offset": [
        419,
        8544
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3540": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3541": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3542": {
      "op": "POP"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "jump": "o",
      "offset": [
        419,
        8544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3545": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3546": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "3548": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3550": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3551": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3552": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3553": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3554": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3556": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3557": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3558": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3560": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3561": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3562": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDF1"
    },
    "3565": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE4C"
    },
    "3568": {
      "fn": "Ownable._transferOwnership",
      "jump": "i",
      "offset": [
        419,
        8544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3569": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3570": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3571": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3572": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3574": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3575": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3576": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3578": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3579": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SUB",
      "path": "7"
    },
    "3580": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3581": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3582": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDE9"
    },
    "3585": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3586": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3587": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "POP",
      "path": "7"
    },
    "3588": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "POP",
      "path": "7"
    },
    "3589": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3590": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        419,
        8544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3591": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3592": {
      "op": "POP"
    },
    "3593": {
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3595": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3596": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3597": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3598": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3600": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3601": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3602": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3603": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3604": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3605": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3607": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3608": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3609": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3610": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3611": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3612": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "3614": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3615": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3616": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3617": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3618": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        419,
        8544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3619": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3620": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3621": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3622": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3623": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3624": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3625": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3626": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3627": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "GT",
      "path": "7"
    },
    "3628": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3629": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE47"
    },
    "3632": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3633": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3635": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3636": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3637": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3638": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3640": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3641": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3642": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE47"
    },
    "3645": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3646": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3647": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3648": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3649": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3650": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3651": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE63"
    },
    "3654": {
      "fn": "Ownable._transferOwnership",
      "jump": "i",
      "offset": [
        419,
        8544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3655": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3656": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "POP",
      "path": "7"
    },
    "3657": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "POP",
      "path": "7"
    },
    "3658": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "POP",
      "path": "7"
    },
    "3659": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        419,
        8544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3660": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3661": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3663": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3664": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3665": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3666": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3667": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3668": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3669": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3670": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3673": {
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3674": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3675": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3676": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3678": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3679": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3680": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3681": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3682": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        419,
        8544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3683": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3684": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA72"
    },
    "3687": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3688": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3689": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3690": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3691": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3692": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "GT",
      "path": "7"
    },
    "3693": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3694": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE7D"
    },
    "3697": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3698": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3700": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3701": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3702": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3704": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "ADD",
      "path": "7"
    },
    "3705": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE69"
    },
    "3708": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3709": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3710": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "POP",
      "path": "7"
    },
    "3711": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3712": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        419,
        8544
      ],
      "op": "JUMP",
      "path": "7"
    }
  },
  "sha1": "aa1aa84c86bb30b163e1b0c64760ce7c4cfd9842",
  "source": "pragma solidity 0.4.24;\n\nimport \"deps/openzeppelin-solidity/2.0.0/contracts/math/SafeMath.sol\";\nimport \"deps/openzeppelin-solidity/2.0.0/contracts/ownership/Ownable.sol\";\n\nimport \"./lib/Select.sol\";\n\n\ninterface IOracle {\n    function getData() external returns (uint256, bool);\n}\n\n\n/**\n * @title Median Oracle\n *\n * @notice Provides a value onchain that's aggregated from a whitelisted set of\n *         providers.\n */\ncontract MedianOracle is Ownable, IOracle {\n    using SafeMath for uint256;\n\n    struct Report {\n        uint256 timestamp;\n        uint256 payload;\n    }\n\n    // Addresses of providers authorized to push reports.\n    address[] public providers;\n\n    // Reports indexed by provider address. Report[0].timestamp > 0\n    // indicates provider existence.\n    mapping (address => Report[2]) public providerReports;\n\n    event ProviderAdded(address provider);\n    event ProviderRemoved(address provider);\n    event ReportTimestampOutOfRange(address provider);\n    event ProviderReportPushed(address indexed provider, uint256 payload, uint256 timestamp);\n\n    // The number of seconds after which the report is deemed expired.\n    uint256 public reportExpirationTimeSec;\n\n    // The number of seconds since reporting that has to pass before a report\n    // is usable.\n    uint256 public reportDelaySec;\n\n    // The minimum number of providers with valid reports to consider the\n    // aggregate report valid.\n    uint256 public minimumProviders = 1;\n\n    // Timestamp of 1 is used to mark uninitialized and invalidated data.\n    // This is needed so that timestamp of 1 is always considered expired.\n    uint256 private constant MAX_REPORT_EXPIRATION_TIME = 520 weeks;\n\n    /**\n    * @param reportExpirationTimeSec_ The number of seconds after which the\n    *                                 report is deemed expired.\n    * @param reportDelaySec_ The number of seconds since reporting that has to\n    *                        pass before a report is usable\n    * @param minimumProviders_ The minimum number of providers with valid\n    *                          reports to consider the aggregate report valid.\n    */\n    constructor(uint256 reportExpirationTimeSec_,\n                uint256 reportDelaySec_,\n                uint256 minimumProviders_)\n        public\n    {\n        require(reportExpirationTimeSec_ <= MAX_REPORT_EXPIRATION_TIME);\n        require(minimumProviders_ > 0);\n        reportExpirationTimeSec = reportExpirationTimeSec_;\n        reportDelaySec = reportDelaySec_;\n        minimumProviders = minimumProviders_;\n    }\n\n     /**\n     * @notice Sets the report expiration period.\n     * @param reportExpirationTimeSec_ The number of seconds after which the\n     *        report is deemed expired.\n     */\n    function setReportExpirationTimeSec(uint256 reportExpirationTimeSec_)\n        external\n        onlyOwner\n    {\n        require(reportExpirationTimeSec_ <= MAX_REPORT_EXPIRATION_TIME);\n        reportExpirationTimeSec = reportExpirationTimeSec_;\n    }\n\n    /**\n    * @notice Sets the time period since reporting that has to pass before a\n    *         report is usable.\n    * @param reportDelaySec_ The new delay period in seconds.\n    */\n    function setReportDelaySec(uint256 reportDelaySec_)\n        external\n        onlyOwner\n    {\n        reportDelaySec = reportDelaySec_;\n    }\n\n    /**\n    * @notice Sets the minimum number of providers with valid reports to\n    *         consider the aggregate report valid.\n    * @param minimumProviders_ The new minimum number of providers.\n    */\n    function setMinimumProviders(uint256 minimumProviders_)\n        external\n        onlyOwner\n    {\n        require(minimumProviders_ > 0);\n        minimumProviders = minimumProviders_;\n    }\n\n    /**\n     * @notice Pushes a report for the calling provider.\n     * @param payload is expected to be 18 decimal fixed point number.\n     */\n    function pushReport(uint256 payload) external\n    {\n        address providerAddress = msg.sender;\n        Report[2] storage reports = providerReports[providerAddress];\n        uint256[2] memory timestamps = [reports[0].timestamp, reports[1].timestamp];\n\n        require(timestamps[0] > 0);\n\n        uint8 index_recent = timestamps[0] >= timestamps[1] ? 0 : 1;\n        uint8 index_past = 1 - index_recent;\n\n        // Check that the push is not too soon after the last one.\n        require(timestamps[index_recent].add(reportDelaySec) <= now);\n\n        reports[index_past].timestamp = now;\n        reports[index_past].payload = payload;\n\n        emit ProviderReportPushed(providerAddress, payload, now);\n    }\n\n    /**\n    * @notice Invalidates the reports of the calling provider.\n    */\n    function purgeReports() external\n    {\n        address providerAddress = msg.sender;\n        require (providerReports[providerAddress][0].timestamp > 0);\n        providerReports[providerAddress][0].timestamp=1;\n        providerReports[providerAddress][1].timestamp=1;\n    }\n\n    /**\n    * @notice Computes median of provider reports whose timestamps are in the\n    *         valid timestamp range.\n    * @return AggregatedValue: Median of providers reported values.\n    *         valid: Boolean indicating an aggregated value was computed successfully.\n    */\n    function getData()\n        external\n        returns (uint256, bool)\n    {\n        uint256 reportsCount = providers.length;\n        uint256[] memory validReports = new uint256[](reportsCount);\n        uint256 size = 0;\n        uint256 minValidTimestamp =  now.sub(reportExpirationTimeSec);\n        uint256 maxValidTimestamp =  now.sub(reportDelaySec);\n\n        for (uint256 i = 0; i < reportsCount; i++) {\n            address providerAddress = providers[i];\n            Report[2] memory reports = providerReports[providerAddress];\n\n            uint8 index_recent = reports[0].timestamp >= reports[1].timestamp ? 0 : 1;\n            uint8 index_past = 1 - index_recent;\n            uint256 reportTimestampRecent = reports[index_recent].timestamp;\n            if (reportTimestampRecent > maxValidTimestamp) {\n                // Recent report is too recent.\n                uint256 reportTimestampPast = providerReports[providerAddress][index_past].timestamp;\n                if (reportTimestampPast < minValidTimestamp) {\n                    // Past report is too old.\n                    emit ReportTimestampOutOfRange(providerAddress);\n                } else if (reportTimestampPast > maxValidTimestamp) {\n                    // Past report is too recent.\n                    emit ReportTimestampOutOfRange(providerAddress);\n                } else {\n                    // Using past report.\n                    validReports[size++] = providerReports[providerAddress][index_past].payload;\n                }\n            } else {\n                // Recent report is not too recent.\n                if (reportTimestampRecent < minValidTimestamp) {\n                    // Recent report is too old.\n                    emit ReportTimestampOutOfRange(providerAddress);\n                } else {\n                    // Using recent report.\n                    validReports[size++] = providerReports[providerAddress][index_recent].payload;\n                }\n            }\n        }\n\n        if (size < minimumProviders) {\n            return (0, false);\n        }\n\n        return (Select.computeMedian(validReports, size), true);\n    }\n\n    /**\n     * @notice Authorizes a provider.\n     * @param provider Address of the provider.\n     */\n    function addProvider(address provider)\n        external\n        onlyOwner\n    {\n        require(providerReports[provider][0].timestamp == 0);\n        providers.push(provider);\n        providerReports[provider][0].timestamp = 1;\n        emit ProviderAdded(provider);\n    }\n\n    /**\n     * @notice Revokes provider authorization.\n     * @param provider Address of the provider.\n     */\n    function removeProvider(address provider)\n        external\n        onlyOwner\n    {\n        delete providerReports[provider];\n        for (uint256 i = 0; i < providers.length; i++) {\n            if (providers[i] == provider) {\n                if (i + 1  != providers.length) {\n                    providers[i] = providers[providers.length-1];\n                }\n                providers.length--;\n                emit ProviderRemoved(provider);\n                break;\n            }\n        }\n    }\n\n    /**\n     * @return The number of authorized providers.\n     */\n    function providersSize()\n        external\n        view\n        returns (uint256)\n    {\n        return providers.length;\n    }\n}\n",
  "sourceMap": "419:8125:7:-;;;1460:1;1426:35;;2134:417;8:9:-1;5:2;;;30:1;27;20:12;5:2;2134:417:7;;;;;;;;;;;;;;;;;;;;;;;;;509:6:14;:19;;-1:-1:-1;;;;;;509:19:14;518:10;509:19;;;;2134:417:7;;;;-1:-1:-1;;;;;572:6:14;;539:40;;509:6;;539:40;1671:9:7;2301:54;;;2293:63;;;;;;2394:1;2374:21;;2366:30;;;;;;2406:23;:50;;;;2466:14;:32;2508:16;:36;419:8125;;;;;;",
  "sourcePath": "contracts/digg-oracles/MedianOracle.sol",
  "type": "contract"
}